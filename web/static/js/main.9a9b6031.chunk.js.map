{"version":3,"sources":["app/hooks.ts","config.ts","env.ts","components/ScrollToTop.tsx","models/Navigator.ts","models/User.ts","models/Master.ts","models/Task.ts","components/Header.tsx","components/Footer.tsx","components/PieChart.tsx","components/BarChart.tsx","components/LineChart.tsx","components/MasterView.tsx","components/MasterEdit.tsx","pages/Task.tsx","components/TaskEdit.tsx","components/Notification.tsx","components/Overlay.tsx","pages/Home.tsx","pages/Account.tsx","pages/Login.tsx","pages/Register.tsx","pages/Masters.tsx","pages/Master.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","apiURL","convertDate","date","newDate","Date","y","getFullYear","m","getMonth","slice","d","getDate","dateOrigin","dateString","dateNumbner","Number","langSet","window","navigator","languages","language","common","site","dad","mom","message","menu","home","task","master","account","category","cook","bath","delivery","clean","laundry","sleep","wash","child","others","chart","pie","line","bar","title1","title2","sub1","sub2","sub3","sub4","person","add","save","name","type","point","welcome","email","logout","login","title","user","password","remember","signin","forgot","create","register","password1","password2","already","ScrollToTop","pathname","useLocation","useEffect","scrollTo","navigatorSlice","createSlice","initialState","currentPage","reducers","changeNavigation","state","action","payload","selectNavigation","actions","getCookieToken","Cookies","get","token","userLogin","createAsyncThunk","loginData","a","fetch","method","credentials","body","JSON","stringify","username","headers","Headers","then","res","json","response","userLogout","userRegister","registerData","getUserData","mode","cache","userSlice","isLogined","userData","setLoginStatus","extraReducers","builder","addCase","fulfilled","set","expires","key","remove","pending","rejected","selectUser","getMasterList","addMaster","masterData","editMaster","masterObject","String","id","console","log","removeMaster","masterSlice","masters","filter","selectMaster","createSelector","masterID","find","masterName","setDateRange","today","endDate","subDays","startWeek","subWeeks","startMonth","subMonths","getTaskList","taskURL","forEach","element","getWeeklyTaskList","getMonthlyTaskList","changeTaskList","taskData","postData","editTaskList","item","push","newTaskList","addTask","editTask","taskObject","deleteTask","result","catch","error","taskSlice","tasks","week","month","targetID","selectTask","Header","Props","history","useHistory","dispatch","Box","sx","flexGrow","position","width","top","zIndex","AppBar","Toolbar","IconButton","edge","color","Typography","variant","component","size","onClick","Footer","useState","index","setIndex","path","BottomNavigation","background","bottom","minHeight","showLabels","value","onChange","event","newIndex","targetPage","BottomNavigationAction","label","icon","PieChart","data","labels","datasets","backgroundColor","borderColor","borderWidth","BarChart","chartData","weekLabel","Array","map","_","i","prev","targetDate","format","LineChart","fill","iconList","display","MasterView","ListItem","pt","pb","ListItemButton","Grid","container","spacing","xs","ListItemAvatar","Avatar","targetIcon","findIcon","ListItemText","primary","secondary","targetDisplayName","findDisplayName","ListItemIcon","Divider","MasterEdit","setName","setType","setPoint","loading","setLoading","snackBar","setSnackBar","userStatus","useContext","UserContext","userID","pk","maxWidth","noValidate","autoComplete","TextField","target","FormControl","fullWidth","InputLabel","Select","labelId","Object","entries","MenuItem","Slider","newValue","valueLabelDisplay","step","min","max","Button","mt","mb","newMaster","setTimeout","isDisplay","TaskContext","createContext","Task","setDate","dateObj","currentUserID","initTaskList","initTaskListData","initIDArray","setTasks","setTask","newTask","tempTaskList","sort","b","Container","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","List","dense","taskItem","Provider","fontSize","startIcon","p","idArray","length","Math","update","currentIDArray","newTasks","includes","removedTasks","changedTasks","TaskEdit","getMasterName","targetMaster","setMaster","setPerson","createNewTask","newPerson","selectedMasterName","targetMasterID","targetName","getMasterID","masterItem","px","Notification","setDisplay","Snackbar","open","autoHideDuration","onClose","Alert","severity","Overlay","Backdrop","CircularProgress","Home","masterList","taskList","sumPoints","reduce","sum","getPointByMasterID","sumDaily","targetTaskList","points","pieData","dad_week_points","mom_week_points","dad_month_points","mom_month_points","lineData","dadPointList","momPointList","dadTaskList","momTaskList","dad_points","mom_points","dad_tasks","mom_tasks","LineData","src","alt","paddingBlock","sm","md","lg","xl","Paper","Acount","userInfo","my","Login","theme","createTheme","backgroundImage","backgroundPosition","ThemeProvider","CssBaseline","padding","flexDirection","alignItems","borderRadius","bgcolor","onSubmit","preventDefault","FormData","currentTarget","loginInfo","margin","required","autoFocus","FormControlLabel","control","Checkbox","Link","href","Register","registerInfo","Masters","Master","match","useRouteMatch","App","exact","Account","store","configureStore","reducer","userReducer","masterReducer","taskReducer","navigatorReducer","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a9b6031.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// Production switch\nimport { devURL, prodURL } from './env'\nexport const isProduction = true;\nexport const apiURL: string = isProduction ? prodURL : devURL;\n\n// Date format process object\nexport interface dateObject {\n  dateOrigin: Date,\n  dateString: string,\n  dateNumbner: number\n}\nexport function convertDate (date: Date | null): dateObject {\n  const newDate = date ? date: new Date();\n  const y = newDate.getFullYear();\n  const m = (\"00\" + (newDate.getMonth()+1)).slice(-2);\n  const d = (\"00\" + newDate.getDate()).slice(-2);\n  const dateResult = {\n    dateOrigin: newDate,\n    dateString: y + \"-\" + m + \"-\" + d,\n    dateNumbner: Number(y + m + d)\n  }\n  return dateResult;\n}\n\n// English ver text set\nconst enSet = {\n  common: {\n    site: 'Housework Manager',\n    dad: 'Dad',\n    mom: 'Mom',\n    message: 'Sucessed!',\n    menu: {\n      home: 'Home',\n      task: 'Task',\n      master: 'Master',\n      account: 'Account'\n    },\n    category: {\n      cook: 'Cook',\n      bath: 'Bath',\n      delivery: 'Delivery',\n      clean: 'Clean',\n      laundry: '‎Laundry',\n      sleep: 'Sleep',\n      wash: 'Wash',\n      child: 'Child',\n      others: 'Others'\n    },\n    chart: {\n      pie: 'Summary Report',\n      line: 'Tasks done last week',\n      bar: 'Points got last week'\n    }\n  },\n  home: {\n    title1: 'Workload Report',\n    title2: 'Point Summary',\n    sub1: 'Last week summary',\n    sub2: 'Last month summary',\n    sub3: 'Dad\\'s Summary',\n    sub4: 'Mom\\'s Summary',\n  },\n  task: {\n    date: 'Select Date',\n    master: 'Master',\n    person: 'Person',\n    add: 'Add',\n    save: 'Save',\n  },\n  master: {\n    add: 'Add a new master',\n    name: 'Name',\n    type: 'Type',\n    point: 'Points',\n    save: 'Save'\n  },\n  account: {\n    welcome: 'Welcome',\n    email: 'Email',\n    logout: 'Logout'\n  },\n  login: {\n    title: 'Login',\n    user: 'User',\n    password: 'Password',\n    remember: 'Remember me',\n    signin: 'Sign in',\n    forgot: 'Forgot password',\n    create: 'Create an account'\n  },\n  register: {\n    title: 'Register',\n    user: 'User',\n    email: 'Email',\n    password1: 'Password',\n    password2: 'Password Confirm',\n    create: 'Create',\n    already: 'Already have an account'\n  }\n} \n\n// Japanese ver text set\nconst jpSet = {\n  common: {\n    site: '家事マネージャー',\n    dad: 'パパ',\n    mom: 'ママ',\n    message: '成功しました',\n    menu: {\n      home: 'ホーム',\n      task: 'タスク',\n      master: '項目',\n      account: 'ユーザー'\n    },\n    category: {\n      cook: '料理',\n      bath: '風呂',\n      delivery: '送迎',\n      clean: '掃除',\n      laundry: '‎洗濯',\n      sleep: '就寝',\n      wash: '洗い物',\n      child: '子供',\n      others: 'その他'\n    },\n    chart: {\n      pie: 'サマリー',\n      line: '先週のタスク実績',\n      bar: '先週のポイント実績'\n    }\n  },\n  home: {\n    title1: '家事担当バランス',\n    title2: 'ポイントサマリー',\n    sub1: '先週のサマリー',\n    sub2: '先月のサマリー',\n    sub3: 'パパのサマリー',\n    sub4: 'ママのサマリー',\n  },\n  task: {\n    date: '日付を選んでください',\n    master: '項目',\n    person: '担当',\n    add: '追加',\n    save: '保存',\n  },\n  master: {\n    add: '項目を追加',\n    name: '項目名',\n    type: '種類',\n    point: 'ポイント数',\n    save: '保存'\n  },\n  account: {\n    welcome: 'ようこそ',\n    email: 'メールアドレス',\n    logout: 'ログアウト'\n  },\n  login: {\n    title: 'ログイン',\n    user: 'ユーザー名',\n    password: 'パスワード',\n    remember: 'パスワードを保存',\n    signin: 'ログイン',\n    forgot: 'パスワードを忘れた',\n    create: 'アカウントを作成'\n  },\n  register: {\n    title: '登録',\n    user: 'ユーザー名',\n    email: 'メールアドレス',\n    password1: 'パスワード',\n    password2: 'パスワード確認',\n    create: '作成',\n    already: 'すでにアカウントを持っている'\n  }\n}\n// const browserLang = (window.navigator.languages && window.navigator.languages[0]) || window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage;\n\n// Language select switch\nconst browserLang = (window.navigator.languages && window.navigator.languages[0]) || window.navigator.language;\nexport const langSet = browserLang === 'ja-JP' ? jpSet : enSet;","export const devURL: string = \"http://127.0.0.1:8000/\";\nexport const prodURL: string = \"https://housework-manager-app.herokuapp.com/api/\";","// Basic Library\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\nconst initialState = {\n  currentPage: 0\n}\n\nconst navigatorSlice = createSlice({\n  name: \"navigator\",\n  initialState: initialState,\n  reducers: {\n    changeNavigation: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n    }\n  }\n});\n\nexport default navigatorSlice.reducer;\nexport const selectNavigation = (state: RootState) => state.navigator;\nexport const { changeNavigation } = navigatorSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL } from \"../config\";\nimport Cookies from 'js-cookie';\nimport { userStatus, loginData, registerData } from './types';\n\n\nconst initialState: userStatus = {\n  isLogined: false,\n  token: '',\n  userData: null,\n};\n\nconst getCookieToken = Cookies.get('csrftoken');\nconst token: string = getCookieToken? getCookieToken : '';\n\nexport const userLogin = createAsyncThunk(\n  \"user/userLogin\",\n    async (loginData: loginData) => {\n      const response = await fetch(apiURL + \"rest-auth/login/\", {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n          username: loginData.username,\n          password: loginData.password,\n        }),\n        headers: new Headers({ 'Content-type': 'application/json' })\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const userLogout = createAsyncThunk(\n  \"user/userLogout\",\n    async () => {\n      const response = await fetch(apiURL + \"rest-auth/logout/\", {\n        method: 'POST',\n        credentials: 'include',\n        headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const userRegister = createAsyncThunk(\n  \"user/userRegister\",\n    async (registerData: registerData) => {\n      const response = await fetch(apiURL + \"rest-auth/registration/\", {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n          username: registerData.username,\n          email: registerData.email,\n          password1: registerData.password1,\n          password2: registerData.password2,\n        }),\n        headers: new Headers({ 'Content-type': 'application/json' })\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const getUserData = createAsyncThunk(\n  \"user/getUserData\",\n  async () => {\n    const response = await fetch(apiURL + \"rest-auth/user/\", {\n      method: 'GET',\n      credentials: 'include',\n      mode: 'cors',\n      cache: 'no-cache',\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    setLoginStatus: (state) => {\n      state.isLogined = true;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(userLogin.fulfilled, (state, action) => {\n      state.isLogined = true;\n      Cookies.set('isLogined', '1', { expires: 1 });\n      state.token = action.payload.key;\n    });\n    builder.addCase(userLogout.fulfilled, (state, action) => {\n      state.isLogined = false;\n      state.userData = null;\n      Cookies.remove('isLogined');\n      Cookies.remove('csrftoken');\n      Cookies.remove('sessionid');\n    });\n    builder.addCase(userRegister.fulfilled, (state, action) => {\n      state.isLogined = true;\n      Cookies.set('isLogined', '1', { expires: 1 });\n      state.token = action.payload.key;\n    });\n    builder.addCase(getUserData.fulfilled, (state, action) => {\n      state.userData = action.payload;\n    });\n    // エラー処理ブロック\n    builder.addCase(userLogin.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogin.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogout.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogout.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userRegister.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userRegister.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getUserData.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getUserData.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default userSlice.reducer;\nexport const selectUser = (state: RootState) => state.user;\nexport const { setLoginStatus } = userSlice.actions;","import { createAsyncThunk, createSlice, createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL } from \"../config\";\nimport Cookies from 'js-cookie';\nimport { masterList, masterData, masterObject } from './types';\n\nconst initialState: masterList = {\n  masters: []\n}\n\nconst getCookieToken = Cookies.get('csrftoken');\nconst token: string = getCookieToken? getCookieToken : '';\n\nexport const getMasterList = createAsyncThunk(\n  \"master/getMasterList\",\n    async () => {\n      const response = await fetch(apiURL + \"api/masters/\", {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const addMaster = createAsyncThunk(\n  \"master/addMaster\",\n  async (masterData: masterData) => {\n    const response = await fetch(apiURL + \"api/masters/\", {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(masterData),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const editMaster = createAsyncThunk(\n  \"master/editMaster\",\n  async (masterObject: masterObject) => {\n    const response = await fetch(apiURL + \"api/masters/\" + String(masterObject.id) + \"/\" , {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(masterObject),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    }).then((res) => res.json());\n    console.log(token);\n    return response;\n  }\n);\n\nexport const removeMaster = createAsyncThunk(\n  \"master/removeMaster\",\n  async (masterObject: masterObject) => {\n    const response = await fetch(apiURL + \"api/masters/\" + String(masterObject.id) + \"/\" , {\n      method: 'DELETE',\n      credentials: 'include',\n      body: JSON.stringify(masterObject),\n      headers: new Headers({ 'Content-type': 'application/json' })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nconst masterSlice = createSlice({\n  name: \"master\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getMasterList.fulfilled, (state, action) => {\n      state.masters = action.payload;\n    });\n    builder.addCase(addMaster.fulfilled, (state, action) => {\n      state.masters = [...state.masters, action.payload];\n    });\n    builder.addCase(editMaster.fulfilled, (state, action) => {\n      state.masters = state.masters.filter(master => master.id !== action.payload.id);\n      state.masters = [...state.masters, action.payload];\n    });\n    builder.addCase(removeMaster.fulfilled, (state, action) => {\n      state.masters = state.masters.filter(master => master.id !== action.payload.id);\n    });\n    // エラー処理ブロック\n    builder.addCase(getMasterList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMasterList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(removeMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(removeMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default masterSlice.reducer;\nexport const selectMaster = (state: RootState) => state.master;\nexport const selectMasterByID = createSelector(\n  (state: RootState) => state.master,\n  (state: RootState, masterID: number) => masterID,\n  (masters, masterID) => masters.masters.find(master => master.id === masterID),\n)\nexport const selectMasterByName = createSelector(\n  (state: RootState) => state.master,\n  (state: RootState, masterName: string) => masterName,\n  (masters, masterName) => masters.masters.find(master => master.name === masterName),\n)","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL, convertDate } from \"../config\";\nimport Cookies from 'js-cookie';\nimport { subMonths, subWeeks, subDays } from 'date-fns';\nimport { taskList, changedTaskList, taskData, existTask, taskObject } from './types';\n\nconst initialState: taskList = {\n  tasks: [],\n  dad: {\n    week: [],\n    month: []\n  },\n  mom: {\n    week: [],\n    month: []\n  }\n}\n\nconst getCookieToken = Cookies.get('csrftoken');\nconst token: string = getCookieToken? getCookieToken : '';\nconst setDateRange = () => {\n  const today = new Date();\n  const endDate = convertDate(subDays(today, 1)).dateString;\n  const startWeek = convertDate(subWeeks(today, 1)).dateString;\n  const startMonth = convertDate(subMonths(today, 1)).dateString;\n  const dateRange = {\n    startWeek: startWeek,\n    startMonth: startMonth,\n    endDate: endDate\n  }\n  return dateRange;\n}\n\nexport const getTaskList = createAsyncThunk(\n  \"task/getTaskList\",\n    async (date: string) => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${date}&end_date=${date}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      response.forEach((element: any) => {\n        element['update'] = false;\n      });\n      return response;\n    }\n);\n\nexport const getWeeklyTaskList = createAsyncThunk(\n  \"task/getWeeklyTaskList\",\n    async () => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${setDateRange().startWeek}&end_date=${setDateRange().endDate}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const getMonthlyTaskList = createAsyncThunk(\n  \"task/getMonthlyTaskList\",\n    async () => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${setDateRange().startMonth}&end_date=${setDateRange().endDate}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const changeTaskList = createAsyncThunk(\n  \"task/changeTaskList\",\n  async (taskData: changedTaskList) => {\n    let postData: (taskData | existTask)[] = [];\n    taskData.editTaskList.forEach( item => {\n      postData.push(\n        {\n          id: item.id,\n          user: item.user,\n          master: item.master,\n          person: item.person,\n          date: item.date\n        }\n      )\n    })\n    taskData.newTaskList.forEach( item => {\n      postData.push(\n        {\n          user: item.user,\n          master: item.master,\n          person: item.person,\n          date: item.date\n        }\n      )\n    })\n    const response = await fetch(apiURL + \"api/tasks/\", {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(postData),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const addTask = createAsyncThunk(\n  \"task/addTask\",\n  async (taskData: taskData) => {\n    const response = await fetch(apiURL + \"api/tasks/\", {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(taskData),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const editTask = createAsyncThunk(\n  \"task/editTask\",\n  async (taskObject: taskObject) => {\n    const response = await fetch(apiURL + \"api/tasks/\" + String(taskObject.id) + \"/\" , {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(taskObject),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const deleteTask = createAsyncThunk(\n  \"task/deleteTask\",\n  async (taskObject: taskObject) => {\n    const response = await fetch(apiURL + \"api/tasks/\" + String(taskObject.id) + \"/\" , {\n      method: 'DELETE',\n      credentials: 'include',\n      body: JSON.stringify(taskObject),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': token })\n    })\n    .then((res) => res.json())\n    .then(result => {\n      console.log('Success:', result);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n    return taskObject.id;\n  }\n);\n\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTaskList.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(getWeeklyTaskList.fulfilled, (state, action) => {\n      const tasks: taskObject[] = action.payload;\n      state.dad.week = tasks.filter(task => task.person === 'dad');\n      state.mom.week = tasks.filter(task => task.person === 'mom');\n    });\n    builder.addCase(getMonthlyTaskList.fulfilled, (state, action) => {\n      const tasks: taskObject[] = action.payload;\n      state.dad.month = tasks.filter(task => task.person === 'dad');\n      state.mom.month = tasks.filter(task => task.person === 'mom');\n    });\n    builder.addCase(changeTaskList.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(addTask.fulfilled, (state, action) => {\n      state.tasks = [...state.tasks, action.payload];\n    });\n    builder.addCase(editTask.fulfilled, (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload.id);\n      state.tasks = [...state.tasks, action.payload];\n    });\n    builder.addCase(deleteTask.fulfilled, (state, action) => {\n      console.log('call sucess')\n      const targetID: number = Number(action.payload);\n      state.tasks = state.tasks.filter(task => task.id !== targetID);\n    });\n    // エラー処理ブロック\n    builder.addCase(getTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getWeeklyTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getWeeklyTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMonthlyTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMonthlyTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(changeTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(changeTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addTask.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addTask.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editTask.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editTask.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(deleteTask.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(deleteTask.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default taskSlice.reducer;\nexport const selectTask = (state: RootState) => state.task;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatch } from '../app/hooks';\nimport { langSet } from \"../config\";\n\n// Models\nimport { changeNavigation } from '../models';\n\n// UI\nimport { AppBar, Box, Toolbar, Typography, IconButton } from '@mui/material';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport type Props = {\n  isLogined: boolean;\n}\n\nconst Header: VFC<Props> = (Props) => {\n  const { isLogined } = Props;\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const toLogin = () => {\n    history.push(\"/login\");\n    dispatch(changeNavigation(3));\n  }\n  const toAccount = () => {\n    history.push(\"/account\");\n    dispatch(changeNavigation(3));\n  }\n  return (\n    <Box sx={{\n      flexGrow: 1,\n      position: \"fixed\",\n      width: \"100%\",\n      top: 0,\n      zIndex: 10,\n    }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"logo\">\n            <CleaningServicesIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {langSet.common.site}\n          </Typography>\n          {\n            isLogined ? <IconButton size=\"large\" color=\"inherit\" aria-label=\"login\" onClick={toAccount}>\n              <AccountCircleIcon />\n            </IconButton>\n              :\n              <IconButton size=\"large\" color=\"inherit\" aria-label=\"login\" onClick={toLogin}>\n                <LockOpenIcon /></IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\nexport default Header;","// Basic Library\nimport { VFC, useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport Cookies from 'js-cookie';\nimport { langSet } from \"../config\";\n\n// Models\nimport { changeNavigation, selectNavigation } from '../models';\n\n// UI\nimport { Box, BottomNavigation, BottomNavigationAction } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst Footer: VFC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const currentPage: number = useAppSelector(selectNavigation).currentPage;\n  const [index, setIndex] = useState(currentPage);\n  const path = [\"/\", \"/task\", \"/masters\", \"/account\"];\n  const isLogined: boolean = Cookies.get('isLogined') === '1' ? true : false;\n  \n  useEffect(()=>{\n    setIndex(currentPage)\n  },[currentPage]);\n\n  const changePage = (targetPage: number) => {\n    if (isLogined) {\n      setIndex(targetPage);\n      dispatch(changeNavigation(targetPage));\n      history.push(path[targetPage]);\n    } else {\n      setIndex(3);\n      dispatch(changeNavigation(3));\n      history.push('/login');\n    }\n  }\n\n  return (\n    <Box>\n      <BottomNavigation\n        sx={{\n          background: \"#efefef\",\n          position: \"fixed\",\n          width: \"100%\",\n          bottom: 0,\n          minHeight: 80,\n          zIndex: 10,\n        }}\n        showLabels\n        value={index}\n        onChange={(event, newIndex) => changePage(newIndex)}\n      >\n        <BottomNavigationAction label={langSet.common.menu.home} icon={<HomeIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.task} icon={<EditIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.master} icon={<CategoryIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.account} icon={<PersonIcon />} />\n      </BottomNavigation>\n    </Box>\n  );\n}\n\nexport default Footer;","// Basic Library\nimport { VFC } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { langSet } from \"../config\";\n\nexport type Props = {\n  dad: number;\n  mom: number;\n}\n\n// レンダリング\nconst PieChart: VFC <Props> = (Props) => {\n  const { dad, mom } = Props;\n  const data = {\n    // x 軸のラベル\n\n    labels: [langSet.common.dad, langSet.common.mom],\n    datasets: [\n      {\n        label: langSet.common.chart.pie,\n        // データの値\n        data: [dad, mom],\n        // グラフの背景色\n        backgroundColor: [\n          'rgb(66, 165, 245, 0.6)',\n          'rgb(255, 112, 67, 0.6)',\n        ],\n        // グラフの枠線の色\n        borderColor: [\n          'rgb(66, 165, 245)',\n          'rgb(255, 112, 67)',\n        ],\n        // グラフの枠線の太さ\n        borderWidth: 1,\n      },\n    ],\n  };\n  return <Pie data={data} />;\n}\nexport default PieChart;","// Basic Library\nimport { VFC } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { subDays } from 'date-fns';\nimport format from \"date-fns/format\";\nimport { convertDate, langSet } from \"../config\";\n\nexport type Props = {\n  chartData: number[];\n}\n\nconst BarChart: VFC <Props> = (Props) => {\n  const { chartData } = Props;\n  const today = new Date();\n  let weekLabel: string[] = [];\n  [...Array(7)].map((_, i) => {\n    const prev: number = 7 - i;\n    const targetDate = format(convertDate(subDays(today, prev)).dateOrigin, 'eee');\n    weekLabel.push(String(targetDate));\n    }\n  )\n  const data = {\n    labels: weekLabel,\n    datasets: [\n      {\n        label: langSet.common.chart.bar,\n        data: chartData,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n          'rgba(255, 99, 132, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  \n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Bar data={data} />\n  )\n}\n\nexport default BarChart;","// Basic Library\nimport { VFC } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { subDays } from 'date-fns';\nimport format from \"date-fns/format\";\nimport { convertDate, langSet } from \"../config\";\n\nexport type Props = {\n  chartData: number[];\n}\n\nconst LineChart: VFC <Props> = (Props) => {\n  const { chartData } = Props;\n  const today = new Date();\n  let weekLabel: string[] = [];\n  [...Array(7)].map((_, i) => {\n    const prev: number = 7 - i;\n    const targetDate = format(convertDate(subDays(today, prev)).dateOrigin, 'eee');\n    weekLabel.push(String(targetDate));\n    }\n  )\n  const data = {\n    labels: weekLabel,\n    datasets: [\n      {\n        label: langSet.common.chart.line,\n        data: chartData,\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n  return (\n    <Line data={data} />\n  )\n}\n\nexport default LineChart;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\n// Models\nimport { masterObject } from \"../models/types\";\n\n// UI\nimport { Grid, ListItem, ListItemText, ListItemAvatar, Avatar, ListItemIcon, Divider, ListItemButton } from '@mui/material';\nimport LocalParkingIcon from '@mui/icons-material/LocalParking';\nimport BathtubIcon from '@mui/icons-material/Bathtub';\nimport EscalatorWarningIcon from '@mui/icons-material/EscalatorWarning';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport DryCleaningIcon from '@mui/icons-material/DryCleaning';\nimport OutdoorGrillIcon from '@mui/icons-material/OutdoorGrill';\nimport HotelIcon from '@mui/icons-material/Hotel';\nimport WashIcon from '@mui/icons-material/Wash';\nimport TaskIcon from '@mui/icons-material/Task';\nimport ChildCareIcon from '@mui/icons-material/ChildCare';\nimport { langSet } from \"../config\";\n\nexport type Props = {\n  master: masterObject;\n}\n\nconst iconList = [\n  {\n    name: 'cook',\n    display: langSet.common.category.cook,\n    icon: <OutdoorGrillIcon />\n  },\n  {\n    name: 'bath',\n    display: langSet.common.category.bath,\n    icon: <BathtubIcon />\n  },\n  {\n    name: 'delivery',\n    display: langSet.common.category.delivery,\n    icon: <EscalatorWarningIcon />\n  },\n  {\n    name: 'clean',\n    display: langSet.common.category.clean,\n    icon: <CleaningServicesIcon />\n  },\n  {\n    name: '‎laundry',\n    display: langSet.common.category.laundry,\n    icon: <DryCleaningIcon />\n  },\n  {\n    name: 'sleep',\n    display: langSet.common.category.sleep,\n    icon: <HotelIcon />\n  },\n  {\n    name: 'wash',\n    display: langSet.common.category.wash,\n    icon: <WashIcon />\n  },\n  {\n    name: 'child',\n    display: langSet.common.category.child,\n    icon: <ChildCareIcon />\n  },\n  {\n    name: 'others',\n    display: langSet.common.category.others,\n    icon: <TaskIcon />\n  }\n]\n\nconst MasterView: VFC<Props> = (Props) => {\n  const history = useHistory();\n  const { master } = Props;\n  const findIcon = (name: string) => {\n    const targetIcon = iconList.find(icon => icon.name === name);\n    const resultIcon = targetIcon ? targetIcon.icon : <TaskIcon />;\n    return resultIcon;\n  }\n  const findDisplayName = (name: string) => {\n    const targetDisplayName = iconList.find(icon => icon.name === name);\n    const resultDisplayName = targetDisplayName ? targetDisplayName.display : langSet.common.category.others;\n    return resultDisplayName;\n  }\n  const toMaster = () => {\n    history.push(`/master/${master.id}`);\n  }\n  return (\n    <>\n      <ListItem sx={{ pt: 2, pb: 2 }}>\n        <ListItemButton component=\"a\" onClick={toMaster}>\n          <Grid container spacing={2}>\n            <Grid item xs={2}>\n              <ListItemAvatar>\n                <Avatar>\n                  {findIcon(master.type)}\n                </Avatar>\n              </ListItemAvatar>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItemText primary={master.name} secondary={findDisplayName(master.type)} />\n            </Grid>\n            <Grid item xs={1}>\n              <ListItemIcon sx={{ pt: 2 }}>\n                <LocalParkingIcon />\n              </ListItemIcon>\n            </Grid>\n            <Grid item xs={3}>\n              <ListItemText primary={master.point} sx={{ pt: 2 }} />\n            </Grid>\n          </Grid>\n        </ListItemButton>\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </>\n  );\n}\n\nexport default MasterView;","// Basic Library\nimport { VFC, useState, useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { langSet } from \"../config\";\nimport { useAppDispatch } from '../app/hooks';\n\n// Components\nimport { Overlay, Notification } from \"../components\"\n\n// Models\nimport { editMaster, addMaster } from \"../models\";\nimport { masterObject, masterData, userStatus } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { Box, TextField, InputLabel, MenuItem, FormControl, Slider, Select, SelectChangeEvent, Typography, Button } from '@mui/material';\n\nexport type Props = {\n  master: masterObject;\n}\n\nconst MasterEdit: VFC<Props> = (Props) => {\n  const history = useHistory();\n  const { master } = Props;\n  const [name, setName] = useState<string>(master.name);\n  const [type, setType] = useState<string>(master.type);\n  const [point, setPoint] = useState<number>(master.point);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [snackBar, setSnackBar] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useContext(UserContext).user;\n  const userID = userStatus.userData? userStatus.userData.pk : 0;\n\n  const handleTypeChange = (event: SelectChangeEvent) => {\n    setType(event.target.value as string);\n  };\n\n  const handlePointChange = (event: Event, newValue: number | number[]) => {\n    setPoint(newValue as number);\n  }\n\n  const saveMaster = () => {\n    const newMaster: masterData = {\n      user: userID,\n      type: type,\n      name: name,\n      point: point,\n    }\n    if (master.id) {\n      const newValue: masterObject = {\n        ...newMaster, id: master.id\n      }\n      dispatch(editMaster(newValue));\n    } else {\n      dispatch(addMaster(newMaster));\n    }\n    setLoading(true);\n    setTimeout(() => {\n      setSnackBar(true);\n    }, 1000);\n    setTimeout(() => {\n      setLoading(false);\n      history.push(\"/masters\");\n    }, 2000);\n  }\n\n   return (\n    <>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <Typography component=\"h1\" variant=\"h5\">ID: {master.id}</Typography>\n      </Box>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField id=\"outlined-basic\" label={langSet.master.name} variant=\"outlined\" value={name} onChange={(event) => setName(event.target.value)} />\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">{langSet.master.type}</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={type}\n            label=\"Type\"\n            onChange={handleTypeChange}\n          >\n            {\n              Object.entries(langSet.common.category).map(([key, value]) => <MenuItem value={key} key={key}>{value}</MenuItem>)\n            }\n          </Select>\n        </FormControl>\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <Slider\n          value={point}\n          onChange={handlePointChange}\n          aria-label=\"Point\"\n          valueLabelDisplay=\"auto\"\n          step={5}\n          min={5}\n          max={50}\n        />\n        <Typography component=\"p\" variant=\"body2\">{langSet.master.point + ': ' + point}</Typography>\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2, pt: 1, pb: 1, width: 120 }}\n          onClick={saveMaster}\n        >\n          {langSet.master.save}\n        </Button>\n      </Box>\n      <Overlay isDisplay={loading} />\n      <Notification isDisplay={snackBar} />\n    </>\n  );\n}\n\nexport default MasterEdit;","// Basic Library\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { dateObject, convertDate, langSet } from \"../config\";\n\n// Components\nimport { TaskEdit, Overlay, Notification } from \"../components\";\n\n// Models\nimport { getTaskList, selectTask, changeTaskList, deleteTask } from \"../models\";\nimport { userStatus, taskList, taskObject } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { TextField, Container, Grid, List, Button, ListItem } from '@mui/material';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const TaskContext = createContext({} as {\n  task: taskObject;\n  setTask: any;\n})\n\nconst Task = () => {\n  const today: Date = new Date();\n  const [date, setDate] = useState<Date | null>(today);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [snackBar, setSnackBar] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n  const dateObj: dateObject = convertDate(date);\n  const userStatus: userStatus = useContext(UserContext).user;\n  const currentUserID: number = userStatus.userData ? userStatus.userData.pk : 0;\n  const initTaskList: taskList = useAppSelector(selectTask);\n  const initTaskListData: taskObject[] = initTaskList.tasks;\n  const initIDArray: number[] = initTaskListData.map(task => task.id);\n  const [tasks, setTasks] = useState<taskObject[]>([]);\n\n  const addNewTask = () => {\n    const idArray: number[] = tasks.map(task => task.id);\n    const currentID: number = tasks.length > 0 ? Math.max(...idArray) : 0;\n    const newID: number = currentID + 1;\n    const newTask: taskObject = {\n      id: newID,\n      user: currentUserID,\n      master: 0,\n      person: '',\n      date: dateObj.dateString,\n      update: true,\n    }\n    setTasks([...tasks, newTask]);\n  }\n\n  const removeTask = (targetID: number) => {\n    setTasks(tasks.filter(task => task.id !== targetID));\n  }\n\n  const setTask = (newTask: taskObject) => {\n    let tempTaskList = tasks.filter(task => task.id !== newTask.id);\n    console.log(tempTaskList);\n    tempTaskList.push(newTask);\n    tempTaskList.sort((a, b) => {\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1;\n      return 0;\n    });\n    setTasks(tempTaskList);\n  }\n\n  const saveTasks = () => {\n    const currentIDArray: number[] = tasks.map(task => task.id);\n    const newTasks: taskObject[] = tasks.filter(task => !initIDArray.includes(task.id));\n    const removedTasks: taskObject[] = initTaskListData.filter(task => !currentIDArray.includes(task.id));\n    const existTasks: taskObject[] = tasks.filter(task => initIDArray.includes(task.id));\n    const changedTasks: taskObject[] = existTasks.filter(task => task.update === true);\n    const changedTaskList = {\n      editTaskList: changedTasks,\n      newTaskList: newTasks\n    }\n    dispatch(changeTaskList(changedTaskList));\n    if (removedTasks.length > 0) {\n      removedTasks.forEach(target => {\n        dispatch(deleteTask(target));\n      })\n    }\n    dispatch(getTaskList(dateObj.dateString));\n    setTasks(initTaskList.tasks);\n    setLoading(true);\n    setTimeout(() => {\n      setSnackBar(true);\n    }, 1000);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }\n\n  useEffect(() => {\n    setTasks(initTaskList.tasks);\n  }, [initTaskList, dispatch]);\n\n  useEffect(() => {\n    setTasks([]);\n    dispatch(getTaskList(dateObj.dateString));\n  }, [date, dispatch]);\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ pt: 10, pb: 20 }}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          label={langSet.task.date}\n          value={date}\n          onChange={(newDate) => {\n            setDate(newDate);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <Grid container>\n        <Grid item xs={12}>\n          <List dense={false}>\n            {tasks !== [] ? tasks.map((taskItem, index) =>\n              <TaskContext.Provider key={index} value={{ task: taskItem, setTask: setTask }}>\n                <ListItem>\n                  <Grid container>\n                    <TaskEdit />\n                    <Grid item xs={1}>\n                      <DeleteIcon id={String(taskItem.id)} onClick={() => removeTask(taskItem.id)} sx={{ mt: 1 }} color=\"primary\" fontSize=\"large\" />\n                    </Grid>\n                  </Grid>\n                </ListItem>\n              </TaskContext.Provider>) : null\n            }\n          </List>\n        </Grid>\n      </Grid>\n      <Button variant=\"contained\" startIcon={<AddIcon />} sx={{ m: 1, p: 1, width: 120 }} onClick={addNewTask}>{langSet.task.add}</Button>\n      <Button variant=\"contained\" startIcon={<SaveIcon />} sx={{ m: 1, p: 1, width: 120 }} onClick={saveTasks}>{langSet.task.save}</Button>\n      <Overlay isDisplay={loading} />\n      <Notification isDisplay={snackBar} />\n    </Container>\n  );\n}\n\nexport default Task;","// Basic Library\nimport { VFC, useEffect, useState, useContext } from \"react\";\nimport { useAppSelector } from '../app/hooks';\nimport { langSet } from \"../config\";\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { taskObject, masterObject } from \"../models/types\";\nimport { TaskContext } from \"../pages/Task\";\n\n// UI\nimport { InputLabel, MenuItem, FormControl, Select, SelectChangeEvent, Grid } from '@mui/material';\n\n\n\nconst TaskEdit: VFC = () => {\n  const { task, setTask } = useContext(TaskContext);\n  const masterList = useAppSelector(selectMaster);\n  const masters: masterObject[] = masterList.masters;\n  // const targetMasterByID = (targetID: number) => useAppSelector((state) => selectMasterByID(state, targetID));\n  // const targetMasterByName = (targetName: string) => useAppSelector((state) => selectMasterByName(state, targetName));\n  \n  const getMasterName = (targetID: number) => {\n    const targetMaster = masters.find(master => master.id === targetID);\n    const masterName: string = targetMaster ? targetMaster.name : '';\n    return masterName;\n  }\n  \n  const getMasterID = (targetName: string) => {\n    const targetMaster = masters.find(master => master.name === targetName);\n    const masterID: number = Number(targetMaster ? targetMaster.id : 0);\n    return masterID;\n  }\n\n  const [master, setMaster] = useState<string>(getMasterName(task.master));\n  const [person, setPerson] = useState<string>(task.person);\n\n  const handleMasterChange = (event: SelectChangeEvent) => {\n    const selectedMasterName: string = String(event.target.value);\n    setMaster(selectedMasterName);\n    const targetMasterID: number = getMasterID(selectedMasterName);\n    createNewTask(targetMasterID, task.person);\n  };\n\n  const handlePersonChange = (event: SelectChangeEvent) => {\n    const newPerson: string = String(event.target.value);\n    setPerson(newPerson);\n    createNewTask(task.master, newPerson);\n  };\n\n  const createNewTask = (master: number, person: string) => {\n    const newMaster: number = master ? master : task.master;\n    const newPerson: string = person ? person : task.person;\n    const newTask: taskObject = {\n      id: task.id,\n      update: true,\n      user: task.user,\n      master: newMaster,\n      person: newPerson,\n      date: task.date\n    }\n    setTask(newTask);\n  }\n\n  useEffect(()=>{\n    setPerson(task.person);\n    setMaster(getMasterName(task.master));\n  },[task])\n\n  return (\n    <>\n      <Grid item xs={7}>\n        <FormControl fullWidth>\n          <InputLabel id=\"master-select-label\">{langSet.task.master}</InputLabel>\n          <Select\n            labelId=\"master-select-label\"\n            value={master}\n            label=\"Master\"\n            onChange={handleMasterChange}\n            id={String(task.id)}\n          >\n            {masters !== [] ? masters.map((masterItem, index) =>\n              <MenuItem key={index} value={masterItem.name}>{masterItem.name}</MenuItem>\n            ) : <MenuItem value='No Available Master'>-</MenuItem>}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={4} sx={{ px: 1 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"person-select-label\">{langSet.task.person}</InputLabel>\n          <Select\n            labelId=\"person-select-label\"\n            value={person}\n            label=\"Person\"\n            onChange={handlePersonChange}\n            id={String(task.id)}\n          >\n            <MenuItem value=\"dad\">{langSet.common.dad}</MenuItem>\n            <MenuItem value=\"mom\">{langSet.common.mom}</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </>\n  );\n}\n\nexport default TaskEdit;","import { VFC, useState } from 'react';\nimport { Snackbar, Alert } from '@mui/material';\nimport { langSet } from '../config';\n\nexport type Props = {\n  isDisplay: boolean;\n}\n\nconst Notification: VFC<Props> = (Props) => {\n  const { isDisplay } = Props;\n  const [ display, setDisplay ] = useState<boolean>(isDisplay);\n  return (\n      <Snackbar open={display} autoHideDuration={3000} onClose={() => setDisplay(false)} sx={{zIndex: 30}}>\n        <Alert onClose={() => setDisplay(false)} severity=\"success\" sx={{ width: '100%' }}>\n          {langSet.common.message}\n        </Alert>\n      </Snackbar>\n  );\n}\n\nexport default Notification;","import { VFC, useState } from 'react';\nimport { CircularProgress, Backdrop } from '@mui/material';\n\nexport type Props = {\n  isDisplay: boolean;\n}\n\nconst Overlay: VFC<Props> = (Props) => {\n  const { isDisplay } = Props;\n  const [display, setDisplay] = useState<boolean>(isDisplay);\n  return (\n    <Backdrop open={display} sx={{ display: 'flex', zIndex: 20 }}>\n      <CircularProgress />\n    </Backdrop>\n  );\n}\n\nexport default Overlay;","// Basic Library\nimport { VFC, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { subDays } from 'date-fns';\nimport { convertDate, langSet } from \"../config\";\n\n// Components\nimport { PieChart, BarChart, LineChart } from '../components'\n\n// Models\nimport { selectTask, getWeeklyTaskList, getMonthlyTaskList, selectMaster } from \"../models\";\nimport { taskList, taskObject, masterList } from \"../models/types\";\n\n// UI\nimport { Grid, Typography, Container, Paper, Box } from '@mui/material';\nimport MaleIcon from '@mui/icons-material/Male';\nimport FemaleIcon from '@mui/icons-material/Female';\n\nconst Home: VFC = () => {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getWeeklyTaskList());\n    dispatch(getMonthlyTaskList());\n  }, []);\n  const masterList: masterList = useAppSelector(selectMaster);\n  const taskList: taskList = useAppSelector(selectTask);\n\n  const getPointByMasterID = (masterID: number) => {\n    const targetMaster = masterList.masters.find(master => master.id === masterID);\n    return targetMaster ? targetMaster.point : 0;\n  }\n\n  const sumPoints = (tasks: taskObject[]) => {\n    return tasks.reduce((sum, task) => sum + getPointByMasterID(task.master) ,0);\n  }\n\n  const PieData = () => {\n    const dad_week_points: number = sumPoints(taskList.dad.week);\n    const mom_week_points: number = sumPoints(taskList.mom.week);\n    const dad_month_points: number = sumPoints(taskList.dad.month);\n    const mom_month_points: number = sumPoints(taskList.mom.month);\n    const pieData = {\n      dad_week_points: dad_week_points,\n      mom_week_points: mom_week_points,\n      dad_month_points: dad_month_points,\n      mom_month_points: mom_month_points,\n    }\n    return pieData;\n  }\n\n  const sumDaily = (targetDate: string, tasks: taskObject[]) => {\n    const targetTaskList: taskObject[] = tasks.filter(task => task.date === targetDate);\n    const totalPoints: number = sumPoints(targetTaskList);\n    const totalTasks: number = targetTaskList.length;\n    const total = {\n      points: totalPoints,\n      tasks: totalTasks\n    }\n    return total;\n  }\n\n  const LineData = () => {\n    const today = new Date();\n    let dadPointList: number[] = [];\n    let momPointList: number[] = [];\n    let dadTaskList: number[] = [];\n    let momTaskList: number[] = [];\n    [...Array(7)].map((_, i) => {\n        const prev: number = 7 - i;\n        const targetDate = convertDate(subDays(today, prev)).dateString;\n        dadPointList.push(sumDaily(targetDate, taskList.dad.week).points);\n        momPointList.push(sumDaily(targetDate, taskList.mom.week).points);\n        dadTaskList.push(sumDaily(targetDate, taskList.dad.week).tasks);\n        momTaskList.push(sumDaily(targetDate, taskList.mom.week).tasks);\n      }\n    )\n    const lineData = {\n      dad_points: dadPointList,\n      mom_points: momPointList,\n      dad_tasks: dadTaskList,\n      mom_tasks: momTaskList,\n    }\n    return lineData;\n  }\n\n  const pieData = PieData();\n  const lineData = LineData();\n\n  return (\n    <>\n      <Box sx={{ pt:7 }}>\n      <img src=\"/mv.jpg\" alt=\"\" width=\"100%\" />\n      </Box>\n      <Container sx={{ pb: 16, pt: 4 }}>\n        <Typography variant=\"h4\" component=\"h2\" sx={{ paddingBlock: 4 }}>{langSet.home.title1}</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <Paper>\n              <Box sx={{ p: 4 }}>\n                <Typography variant=\"h6\" component=\"h3\" sx={{ pb: 2 }}>{langSet.home.sub1}</Typography>\n                <PieChart dad={pieData.dad_week_points} mom={pieData.mom_week_points} />\n              </Box>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <Paper>\n              <Box sx={{ p: 4 }}>\n                <Typography variant=\"h6\" component=\"h3\" sx={{ pb: 2 }}>{langSet.home.sub2}</Typography>\n                <PieChart dad={pieData.dad_month_points} mom={pieData.mom_month_points} />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n        <Typography variant=\"h4\" component=\"h2\" sx={{ pt: 8, pb: 4 }}>{langSet.home.title2}</Typography>\n        <Typography variant=\"h6\" component=\"h3\"><MaleIcon />{langSet.home.sub3}</Typography>\n        <Grid container spacing={2} sx={{mb:8}}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <BarChart chartData={lineData.dad_points} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <LineChart chartData={lineData.dad_tasks} />\n          </Grid>\n        </Grid>\n        <Typography variant=\"h6\" component=\"h3\"><FemaleIcon />{langSet.home.sub4}</Typography>\n        <Grid container spacing={2} sx={{mb:8}}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <BarChart chartData={lineData.mom_points} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <LineChart chartData={lineData.mom_tasks} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n}\nexport default Home;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { langSet } from \"../config\";\n\n// Models\nimport { selectUser, userLogout } from \"../models\";\nimport { userStatus } from \"../models/types\";\n\n// UI\nimport { Typography, Container, Button } from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst Acount: VFC = () => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useAppSelector(selectUser);\n  const userInfo = userStatus.userData;\n  const logout = () => {\n    dispatch(userLogout());\n    history.push(\"/\");\n  }\n\n  return (\n    <Container sx={{ pb: 20, pt: 10 }}>\n      {userInfo? \n        <>\n          <h1></h1>\n          <Typography variant=\"h4\" component=\"h1\" sx={{ flexGrow: 1 }}>\n            {langSet.account.welcome + userInfo.username} !\n          </Typography>\n          <Typography variant=\"h6\" component=\"p\" sx={{ flexGrow: 1, my: 4, px: 2 }}>\n            {langSet.account.email + ': ' + userInfo.email}\n          </Typography>\n          <Button variant=\"contained\" startIcon={<LogoutIcon />} sx={{ m:1, p: 1, width: 120 }} onClick={logout}>{langSet.account.logout}</Button>\n        </>\n      : null}\n    </Container>\n  )\n}\nexport default Acount;","// Basic Library\nimport { VFC, FormEvent, useState } from \"react\";\nimport { useAppDispatch } from '../app/hooks';\nimport { useHistory } from \"react-router-dom\";\nimport { langSet } from \"../config\";\n\n// Components\nimport { Overlay, Notification } from \"../components\"\n\n// Models\nimport { userLogin } from \"../models\";\nimport { loginData } from \"../models/types\";\n\n// UI\nimport { createTheme, ThemeProvider, Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst Login: VFC = () => {\n  const theme = createTheme();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [snackBar, setSnackBar] = useState<boolean>(false);\n\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginInfo: loginData = { username: String(data.get('user')), password: String(data.get('password')) };\n    dispatch(userLogin(loginInfo));\n    setLoading(true);\n    setTimeout(() => {\n      setSnackBar(true);\n    }, 1000);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n\n  const toRegister = (event: any) => {\n    event.preventDefault();\n    history.push('/register');\n  }\n\n  return (\n    <Box sx={{\n      backgroundImage: \"url('/login.jpg')\",\n      backgroundPosition: 'bottom center',\n      minHeight: '100vh',\n      pt: 12\n    }}>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              padding: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              background: 'rgba(255, 255, 255, .8)',\n              borderRadius: '4px'\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {langSet.login.title}\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"user\"\n                label={langSet.login.user}\n                name=\"user\"\n                autoComplete=\"user\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label={langSet.login.password}\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label={langSet.login.remember}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {langSet.login.signin}\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    {langSet.login.forgot}\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\" onClick={toRegister}>\n                    {langSet.login.create}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      <Overlay isDisplay={loading} />\n      <Notification isDisplay={snackBar} />\n    </Box>\n  );\n}\n\nexport default Login;","// Basic Library\nimport { VFC, FormEvent, useState } from \"react\";\nimport { useAppDispatch } from '../app/hooks';\nimport { useHistory } from \"react-router-dom\";\nimport { langSet } from \"../config\";\n\n// Components\nimport { Overlay, Notification } from \"../components\"\n\n// Models\nimport { userRegister } from \"../models\";\nimport { registerData } from \"../models/types\";\n\n// UI\nimport { createTheme, ThemeProvider, Avatar, Button, CssBaseline, TextField, Link, Grid, Box, Typography, Container } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst Register: VFC = () => {\n  const theme = createTheme();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [snackBar, setSnackBar] = useState<boolean>(false);\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const registerInfo:registerData = {username: String(data.get('user')), email: String(data.get('email')), password1: String(data.get('password')), password2: String(data.get('password_confirm'))};\n    dispatch(userRegister(registerInfo));\n    setLoading(true);\n    setTimeout(() => {\n      setSnackBar(true);\n    }, 1000);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n\n  const toLogin = (event: any) => {\n    event.preventDefault();\n    history.push('/login');\n  }\n  return (\n    <Box sx={{ \n        backgroundImage: \"url('/login.jpg')\",\n        backgroundPosition: 'bottom center',\n        minHeight: '100vh',\n        pt: 12\n      }}>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              padding: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              background: 'rgba(255, 255, 255, .8)',\n              borderRadius: '4px'\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <AccountCircleIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {langSet.register.title}\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"user\"\n                label={langSet.register.user}\n                name=\"user\"\n                autoComplete=\"user\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label={langSet.register.email}\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label={langSet.register.password1}\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password_confirm\"\n                label={langSet.register.password2}\n                type=\"password\"\n                id=\"password_confirm\"\n                autoComplete=\"current-password\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {langSet.register.create}\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\" onClick={toLogin}>\n                  {langSet.register.already}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      <Overlay isDisplay={loading} />\n      <Notification isDisplay={snackBar} />\n    </Box>\n  );\n}\n\nexport default Register;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector } from '../app/hooks';\nimport { langSet } from \"../config\";\n\n// Components\nimport { MasterView } from \"../components\";\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { masterObject } from \"../models/types\";\n\n// UI\nimport { Container, Grid, List, Button } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Masters: VFC = () => {\n  const history = useHistory();\n  const masterList = useAppSelector(selectMaster);\n  const masters: masterObject[] = masterList.masters;\n  const addMaster = () => {\n    history.push('/master/new');\n  }\n  return (\n  <Container maxWidth=\"sm\" sx={{ pt: 10, pb: 20 }}>\n    <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List dense>\n          {masters !== [] ? masters.map((masterItem, index) =>\n                <MasterView key={index} master={masterItem} />) : null\n          }\n          </List>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, pt: 1, pb: 1, width: 200 }}\n            onClick={addMaster}\n            startIcon={<AddIcon />}\n          >\n          {langSet.master.add}\n        </Button>\n        </Grid>\n      </Grid>\n  </Container>\n  )\n}\nexport default Masters;","// Basic Library\nimport { VFC, useContext } from \"react\";\nimport { useAppSelector } from '../app/hooks';\nimport { useRouteMatch } from \"react-router\";\n\n// Components\nimport { MasterEdit } from '../components';\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { userStatus, masterObject } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { Container } from '@mui/material';\n\nconst Master: VFC = () => {\n  const match = useRouteMatch();\n  const masterList = useAppSelector(selectMaster);\n  const userStatus: userStatus = useContext(UserContext).user;\n  const currentUserID = userStatus.userData? userStatus.userData.pk : 0;\n  const masters: masterObject[] = masterList.masters;\n  const { masterID } = match.params as { masterID: string };\n  const targetMaster = masters.find(master => master.id === Number(masterID));\n  const newMaster: masterObject = {\n    id: null,\n    user: currentUserID,\n    type: '',\n    name: '',\n    point: 0\n  }\n  const masterData: masterObject = targetMaster? targetMaster : newMaster\n  return (\n    <Container maxWidth=\"sm\" sx={{mt: 10}}>\n      <MasterEdit master={masterData} />\n    </Container>\n  )\n}\nexport default Master;","// Basic Library\nimport { VFC, useEffect, createContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Switch, Route } from 'react-router';\nimport { useAppSelector, useAppDispatch } from './app/hooks';\nimport Cookies from 'js-cookie';\n\n// Pages & Components\nimport { Home, Login, Masters, Master, Task, Register, Account } from \"./pages\";\nimport { Header, Footer, ScrollToTop } from './components';\n\n// Models\nimport { getUserData, selectUser, setLoginStatus, getMasterList, changeNavigation } from \"./models\";\nimport { userStatus } from './models/types';\n\n// UI\nimport './App.css';\n\nexport const UserContext = createContext({} as {\n  user: userStatus;\n})\n\nconst App: VFC = () => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useAppSelector(selectUser);\n  const isLogined: boolean = Cookies.get('isLogined') === '1' ? true : false;\n\n  useEffect(() => {\n    if (isLogined) {\n      dispatch(getUserData());\n      dispatch(getMasterList());\n      dispatch(setLoginStatus());\n      history.push(\"/\");\n      dispatch(changeNavigation(0));\n    } else {\n      history.push(\"/login\");\n      dispatch(changeNavigation(3));\n    }\n  }, [isLogined, dispatch]);\n\n  return (\n    <>\n      <UserContext.Provider value={{ user: userStatus }}>\n        <ScrollToTop />\n        <Header isLogined={isLogined} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/account\" component={Account} />\n          <Route path=\"/masters\" component={Masters} />\n          <Route path=\"/master/:masterID\" component={Master} />\n          <Route path=\"/task\" component={Task} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport navigatorReducer from \"../models/Navigator\";\nimport userReducer from \"../models/User\";\nimport masterReducer from \"../models/Master\";\nimport taskReducer from \"../models/Task\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    master: masterReducer,\n    task: taskReducer,\n    navigator: navigatorReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}