{"version":3,"sources":["app/hooks.ts","config.ts","env.ts","components/ScrollToTop.tsx","models/Navigator.ts","models/User.ts","models/Master.ts","models/Task.ts","components/Header.tsx","components/Footer.tsx","components/PieChart.tsx","components/BarChart.tsx","components/LineChart.tsx","components/MasterView.tsx","components/MasterEdit.tsx","pages/Task.tsx","components/TaskEdit.tsx","pages/Home.tsx","pages/Account.tsx","pages/Login.tsx","pages/Register.tsx","pages/Masters.tsx","pages/Master.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","apiURL","webPath","imgPath","convertDate","date","newDate","Date","y","getFullYear","m","getMonth","slice","d","getDate","dateOrigin","dateString","dateNumbner","Number","langSet","window","navigator","languages","language","common","site","dad","mom","message","menu","home","task","master","account","category","cook","bath","delivery","clean","laundry","sleep","wash","child","others","chart","pie","line","bar","error","login","register","title1","title2","sub1","sub2","sub3","sub4","person","add","save","name","type","point","welcome","email","logout","title","user","password","remember","signin","forgot","create","password1","password2","already","ScrollToTop","pathname","useLocation","useEffect","scrollTo","navigatorSlice","createSlice","initialState","currentPage","reducers","changeNavigation","state","action","payload","selectNavigation","actions","userLogin","createAsyncThunk","loginData","a","fetch","method","credentials","body","JSON","stringify","username","headers","Headers","then","res","json","response","key","Error","userLogout","userStatus","token","userRegister","registerData","getUserData","mode","cache","userSlice","isLogined","userData","extraReducers","builder","addCase","fulfilled","Cookies","set","expires","getCookieToken","get","remove","pending","rejected","selectUser","getMasterList","addMaster","masterData","content","editMaster","masterObject","String","id","removeMaster","masterSlice","masters","filter","selectMaster","createSelector","masterID","find","masterName","setDateRange","today","endDate","subDays","startWeek","subWeeks","startMonth","subMonths","getTaskList","taskURL","forEach","element","getWeeklyTaskList","getMonthlyTaskList","changeTaskList","taskData","postData","editTaskList","item","push","newTaskList","result","deleteTask","targetTask","targetTaskURL","console","log","catch","taskSlice","tasks","week","month","targetID","selectTask","Header","Props","history","useHistory","dispatch","Box","sx","flexGrow","position","width","top","zIndex","AppBar","Toolbar","IconButton","edge","color","Typography","variant","component","size","onClick","Footer","useState","index","setIndex","path","BottomNavigation","background","bottom","minHeight","showLabels","value","onChange","event","newIndex","targetPage","BottomNavigationAction","label","icon","PieChart","data","labels","datasets","backgroundColor","borderColor","borderWidth","BarChart","chartData","weekLabel","Array","map","_","i","prev","targetDate","format","LineChart","fill","iconList","display","MasterView","ListItem","pt","pb","ListItemButton","Grid","container","spacing","xs","ListItemAvatar","Avatar","targetIcon","findIcon","ListItemText","primary","secondary","targetDisplayName","findDisplayName","ListItemIcon","Divider","MasterEdit","setName","setType","setPoint","useContext","UserContext","userID","pk","csrftoken","maxWidth","noValidate","autoComplete","TextField","target","FormControl","fullWidth","InputLabel","Select","labelId","Object","entries","MenuItem","Slider","newValue","valueLabelDisplay","step","min","max","Button","mt","mb","newMaster","TaskContext","createContext","Task","setDate","dateObj","currentUserID","initTaskList","initTaskListData","initIDArray","setTasks","setTask","newTask","tempTaskList","sort","b","Container","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","List","dense","taskItem","Provider","fontSize","startIcon","p","idArray","length","Math","update","currentIDArray","newTasks","includes","removedTasks","changedTaskList","TaskEdit","getMasterName","targetMaster","setMaster","setPerson","createNewTask","newPerson","selectedMasterName","targetMasterID","targetName","getMasterID","masterItem","px","Home","masterList","taskList","sumPoints","reduce","sum","getPointByMasterID","sumDaily","targetTaskList","points","pieData","dad_week_points","mom_week_points","dad_month_points","mom_month_points","lineData","dadPointList","momPointList","dadTaskList","momTaskList","dad_points","mom_points","dad_tasks","mom_tasks","LineData","src","alt","paddingBlock","sm","md","lg","xl","Paper","Acount","userInfo","my","Login","theme","createTheme","showError","setShowError","backgroundImage","backgroundPosition","ThemeProvider","CssBaseline","padding","flexDirection","alignItems","borderRadius","bgcolor","onSubmit","preventDefault","FormData","currentTarget","loginInfo","margin","required","autoFocus","FormControlLabel","control","Checkbox","Link","href","Snackbar","open","autoHideDuration","onClose","Alert","severity","Register","registerInfo","Masters","Master","match","useRouteMatch","App","exact","Account","store","configureStore","reducer","userReducer","masterReducer","taskReducer","navigatorReducer","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5df6bf9.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// Production switch\nimport { devURL, prodURL } from './env'\nexport const isProduction = true;\nexport const apiURL: string = isProduction ? prodURL : devURL;\nexport const webPath: string = isProduction ? '/web/' : '/';\nexport const imgPath: string = isProduction ? '../static/' : '/';\n\n// Date format process object\nexport interface dateObject {\n  dateOrigin: Date,\n  dateString: string,\n  dateNumbner: number\n}\nexport function convertDate (date: Date | null): dateObject {\n  const newDate = date ? date: new Date();\n  const y = newDate.getFullYear();\n  const m = (\"00\" + (newDate.getMonth()+1)).slice(-2);\n  const d = (\"00\" + newDate.getDate()).slice(-2);\n  const dateResult = {\n    dateOrigin: newDate,\n    dateString: y + \"-\" + m + \"-\" + d,\n    dateNumbner: Number(y + m + d)\n  }\n  return dateResult;\n}\n\n// English ver text set\nconst enSet = {\n  common: {\n    site: 'Housework Manager',\n    dad: 'Dad',\n    mom: 'Mom',\n    message: 'Sucessed!',\n    menu: {\n      home: 'Home',\n      task: 'Task',\n      master: 'Master',\n      account: 'Account'\n    },\n    category: {\n      cook: 'Cook',\n      bath: 'Bath',\n      delivery: 'Delivery',\n      clean: 'Clean',\n      laundry: '‎Laundry',\n      sleep: 'Sleep',\n      wash: 'Wash',\n      child: 'Child',\n      others: 'Others'\n    },\n    chart: {\n      pie: 'Summary Report',\n      line: 'Tasks done last week',\n      bar: 'Points got last week'\n    },\n    error: {\n      login: 'Login error!',\n      register: 'Register error!'\n    }\n  },\n  home: {\n    title1: 'Workload Report',\n    title2: 'Point Summary',\n    sub1: 'Last week summary',\n    sub2: 'Last month summary',\n    sub3: 'Dad\\'s Summary',\n    sub4: 'Mom\\'s Summary',\n  },\n  task: {\n    date: 'Select Date',\n    master: 'Master',\n    person: 'Person',\n    add: 'Add',\n    save: 'Save',\n  },\n  master: {\n    add: 'Add a new master',\n    name: 'Name',\n    type: 'Type',\n    point: 'Points',\n    save: 'Save'\n  },\n  account: {\n    welcome: 'Welcome',\n    email: 'Email',\n    logout: 'Logout'\n  },\n  login: {\n    title: 'Login',\n    user: 'User',\n    password: 'Password',\n    remember: 'Remember me',\n    signin: 'Sign in',\n    forgot: 'Forgot password',\n    create: 'Create an account'\n  },\n  register: {\n    title: 'Register',\n    user: 'User',\n    email: 'Email',\n    password1: 'Password',\n    password2: 'Password Confirm',\n    create: 'Create',\n    already: 'Already have an account'\n  }\n} \n\n// Japanese ver text set\nconst jpSet = {\n  common: {\n    site: '家事マネージャー',\n    dad: 'パパ',\n    mom: 'ママ',\n    message: '成功しました',\n    menu: {\n      home: 'ホーム',\n      task: 'タスク',\n      master: '項目',\n      account: 'ユーザー'\n    },\n    category: {\n      cook: '料理',\n      bath: '風呂',\n      delivery: '送迎',\n      clean: '掃除',\n      laundry: '‎洗濯',\n      sleep: '就寝',\n      wash: '洗い物',\n      child: '子供',\n      others: 'その他'\n    },\n    chart: {\n      pie: 'サマリー',\n      line: '先週のタスク実績',\n      bar: '先週のポイント実績'\n    },\n    error: {\n      login: 'ログインエラー',\n      register: 'ユーザー登録エラー'\n    }\n  },\n  home: {\n    title1: '家事担当バランス',\n    title2: 'ポイントサマリー',\n    sub1: '先週のサマリー',\n    sub2: '先月のサマリー',\n    sub3: 'パパのサマリー',\n    sub4: 'ママのサマリー',\n  },\n  task: {\n    date: '日付を選んでください',\n    master: '項目',\n    person: '担当',\n    add: '追加',\n    save: '保存',\n  },\n  master: {\n    add: '項目を追加',\n    name: '項目名',\n    type: '種類',\n    point: 'ポイント数',\n    save: '保存'\n  },\n  account: {\n    welcome: 'ようこそ',\n    email: 'メールアドレス',\n    logout: 'ログアウト'\n  },\n  login: {\n    title: 'ログイン',\n    user: 'ユーザー名',\n    password: 'パスワード',\n    remember: 'パスワードを保存',\n    signin: 'ログイン',\n    forgot: 'パスワードを忘れた',\n    create: 'アカウントを作成'\n  },\n  register: {\n    title: '登録',\n    user: 'ユーザー名',\n    email: 'メールアドレス',\n    password1: 'パスワード',\n    password2: 'パスワード確認',\n    create: '作成',\n    already: 'すでにアカウントを持っている'\n  }\n}\n// const browserLang = (window.navigator.languages && window.navigator.languages[0]) || window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage;\n\n// Language select switch\nconst browserLang = (window.navigator.languages && window.navigator.languages[0]) || window.navigator.language;\nexport const langSet = browserLang === 'ja-JP' ? jpSet : enSet;","export const devURL: string = \"http://127.0.0.1:8000/\";\nexport const prodURL: string = \"https://housework-manager-app.herokuapp.com/\";","// Basic Library\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\nconst initialState = {\n  currentPage: 0\n}\n\nconst navigatorSlice = createSlice({\n  name: \"navigator\",\n  initialState: initialState,\n  reducers: {\n    changeNavigation: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n    }\n  }\n});\n\nexport default navigatorSlice.reducer;\nexport const selectNavigation = (state: RootState) => state.navigator;\nexport const { changeNavigation } = navigatorSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL } from \"../config\";\nimport Cookies from 'js-cookie';\nimport { userStatus, loginData, registerData } from './types';\n\n\nconst initialState: userStatus = {\n  isLogined: false,\n  error: '',\n  token: '',\n  userData: null,\n};\n\nexport const userLogin = createAsyncThunk(\n  \"user/userLogin\",\n    async (loginData: loginData) => {\n      const response = await fetch(apiURL + \"rest-auth/login/\", {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n          username: loginData.username,\n          password: loginData.password,\n        }),\n        headers: new Headers({ 'Content-type': 'application/json' })\n      }).then((res) => res.json());\n      if (response.key) {\n        return response;\n      } else {\n        throw new Error(\"Login error\");\n      }\n    }\n);\n\nexport const userLogout = createAsyncThunk(\n  \"user/userLogout\",\n    async (userStatus: userStatus) => {\n      const response = await fetch(apiURL + \"rest-auth/logout/\", {\n        method: 'POST',\n        credentials: 'include',\n        headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': userStatus.token })\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const userRegister = createAsyncThunk(\n  \"user/userRegister\",\n    async (registerData: registerData) => {\n      const response = await fetch(apiURL + \"rest-auth/registration/\", {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n          username: registerData.username,\n          email: registerData.email,\n          password1: registerData.password1,\n          password2: registerData.password2,\n        }),\n        headers: new Headers({ 'Content-type': 'application/json' })\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const getUserData = createAsyncThunk(\n  \"user/getUserData\",\n  async () => {\n    const response = await fetch(apiURL + \"rest-auth/user/\", {\n      method: 'GET',\n      credentials: 'include',\n      mode: 'cors',\n      cache: 'no-cache',\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(userLogin.fulfilled, (state, action) => {\n      state.isLogined = true;\n      Cookies.set('isLogined', '1', { expires: 90 });\n      const getCookieToken = Cookies.get('csrftoken');\n      state.token = getCookieToken? getCookieToken : '';\n    });\n    builder.addCase(userLogout.fulfilled, (state, action) => {\n      state.isLogined = false;\n      state.userData = null;\n      state.error = '';\n      Cookies.remove('isLogined');\n      Cookies.remove('csrftoken');\n      Cookies.remove('sessionid');\n    });\n    builder.addCase(userRegister.fulfilled, (state, action) => {\n      state.isLogined = true;\n      Cookies.set('isLogined', '1', { expires: 90 });\n    });\n    builder.addCase(getUserData.fulfilled, (state, action) => {\n      state.userData = action.payload;\n    });\n    // エラー処理ブロック\n    builder.addCase(userLogin.pending, (state) => {\n      state.error = 'Login error';\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogin.rejected, (state) => {\n      state.error = 'Login error';\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogout.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userLogout.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(userRegister.pending, (state) => {\n      state.error = 'Register error';\n      // \bエラー画面表示\n    });\n    builder.addCase(userRegister.rejected, (state) => {\n      state.error = 'Register error';\n      // \bエラー画面表示\n    });\n    builder.addCase(getUserData.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getUserData.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default userSlice.reducer;\nexport const selectUser = (state: RootState) => state.user;\n// export const { setLoginStatus } = userSlice.actions;","import { createAsyncThunk, createSlice, createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL } from \"../config\";\nimport Cookies from 'js-cookie';\nimport { masterList, masterData, masterObject, newMasterAPI, targetMasterAPI } from './types';\n\nconst initialState: masterList = {\n  masters: []\n}\n\nconst getCookieToken = Cookies.get('csrftoken');\nconst token: string = getCookieToken? getCookieToken : '';\n\nexport const getMasterList = createAsyncThunk(\n  \"master/getMasterList\",\n    async () => {\n      const response = await fetch(apiURL + \"api/masters/\", {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const addMaster = createAsyncThunk(\n  \"master/addMaster\",\n  async (masterData: newMasterAPI) => {\n    const response = await fetch(apiURL + \"api/masters/\", {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(masterData.content),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': masterData.token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const editMaster = createAsyncThunk(\n  \"master/editMaster\",\n  async (masterObject: targetMasterAPI) => {\n    const response = await fetch(apiURL + \"api/masters/\" + String(masterObject.content.id) + \"/\" , {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(masterObject.content),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': masterObject.token })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nexport const removeMaster = createAsyncThunk(\n  \"master/removeMaster\",\n  async (masterObject: targetMasterAPI) => {\n    const response = await fetch(apiURL + \"api/masters/\" + String(masterObject.content.id) + \"/\" , {\n      method: 'DELETE',\n      credentials: 'include',\n      body: JSON.stringify(masterObject.content),\n      headers: new Headers({ 'Content-type': 'application/json' })\n    }).then((res) => res.json());\n    return response;\n  }\n);\n\nconst masterSlice = createSlice({\n  name: \"master\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getMasterList.fulfilled, (state, action) => {\n      state.masters = action.payload;\n    });\n    builder.addCase(addMaster.fulfilled, (state, action) => {\n      state.masters = [...state.masters, action.payload];\n    });\n    builder.addCase(editMaster.fulfilled, (state, action) => {\n      state.masters = state.masters.filter(master => master.id !== action.payload.id);\n      state.masters = [...state.masters, action.payload];\n    });\n    builder.addCase(removeMaster.fulfilled, (state, action) => {\n      state.masters = state.masters.filter(master => master.id !== action.payload.id);\n    });\n    // エラー処理ブロック\n    builder.addCase(getMasterList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMasterList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(addMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(editMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(removeMaster.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(removeMaster.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default masterSlice.reducer;\nexport const selectMaster = (state: RootState) => state.master;\nexport const selectMasterByID = createSelector(\n  (state: RootState) => state.master,\n  (state: RootState, masterID: number) => masterID,\n  (masters, masterID) => masters.masters.find(master => master.id === masterID),\n)\nexport const selectMasterByName = createSelector(\n  (state: RootState) => state.master,\n  (state: RootState, masterName: string) => masterName,\n  (masters, masterName) => masters.masters.find(master => master.name === masterName),\n)","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\nimport { apiURL, convertDate } from \"../config\";\nimport { subMonths, subWeeks, subDays } from 'date-fns';\nimport { taskList, taskData, existTask, taskObject, targetTaskAPI, taskListAPI } from './types';\n\nconst initialState: taskList = {\n  tasks: [],\n  dad: {\n    week: [],\n    month: []\n  },\n  mom: {\n    week: [],\n    month: []\n  }\n}\n\nconst setDateRange = () => {\n  const today = new Date();\n  const endDate = convertDate(subDays(today, 1)).dateString;\n  const startWeek = convertDate(subWeeks(today, 1)).dateString;\n  const startMonth = convertDate(subMonths(today, 1)).dateString;\n  const dateRange = {\n    startWeek: startWeek,\n    startMonth: startMonth,\n    endDate: endDate\n  }\n  return dateRange;\n}\n\nexport const getTaskList = createAsyncThunk(\n  \"task/getTaskList\",\n    async (date: string) => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${date}&end_date=${date}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      response.forEach((element: any) => {\n        element['update'] = false;\n      });\n      return response;\n    }\n);\n\nexport const getWeeklyTaskList = createAsyncThunk(\n  \"task/getWeeklyTaskList\",\n    async () => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${setDateRange().startWeek}&end_date=${setDateRange().endDate}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const getMonthlyTaskList = createAsyncThunk(\n  \"task/getMonthlyTaskList\",\n    async () => {\n      const taskURL = `${apiURL}api/tasks/?start_date=${setDateRange().startMonth}&end_date=${setDateRange().endDate}`;\n      const response = await fetch(taskURL, {\n        method: 'GET',\n        credentials: 'include',\n        mode: 'cors',\n        cache: 'no-cache',\n      }).then((res) => res.json());\n      return response;\n    }\n);\n\nexport const changeTaskList = createAsyncThunk(\n  \"task/changeTaskList\",\n  async (taskData: taskListAPI) => {\n    let postData: (taskData | existTask)[] = [];\n    taskData.editTaskList.forEach( item => {\n      postData.push(\n        {\n          id: item.id,\n          user: item.user,\n          master: item.master,\n          person: item.person,\n          date: item.date\n        }\n      )\n    })\n    taskData.newTaskList.forEach( item => {\n      postData.push(\n        {\n          user: item.user,\n          master: item.master,\n          person: item.person,\n          date: item.date\n        }\n      )\n    })\n    const response = await fetch(apiURL + \"api/tasks/\", {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(postData),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': taskData.token })\n    }).then((res) => res.json());\n    const result = {\n      content: response,\n      date: taskData.date\n    }\n    return result;\n  }\n);\n\nexport const deleteTask = createAsyncThunk(\n  \"task/deleteTask\",\n  async (targetTask: targetTaskAPI) => {\n    const targetTaskURL = `${apiURL}api/tasks/${String(targetTask.content.id)}/?start_date=${targetTask.date}&end_date=${targetTask.date}`;\n    const response = await fetch(targetTaskURL, {\n      method: 'DELETE',\n      credentials: 'include',\n      body: JSON.stringify(targetTask.content),\n      headers: new Headers({ 'Content-type': 'application/json', 'X-CSRFToken': targetTask.token })\n    })\n    .then((res) => res.json())\n    .then(result => {\n      console.log('Success:', result);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n    return targetTask.content.id;\n  }\n);\n\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTaskList.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(getWeeklyTaskList.fulfilled, (state, action) => {\n      const tasks: taskObject[] = action.payload;\n      state.dad.week = tasks.filter(task => task.person === 'dad');\n      state.mom.week = tasks.filter(task => task.person === 'mom');\n    });\n    builder.addCase(getMonthlyTaskList.fulfilled, (state, action) => {\n      const tasks: taskObject[] = action.payload;\n      state.dad.month = tasks.filter(task => task.person === 'dad');\n      state.mom.month = tasks.filter(task => task.person === 'mom');\n    });\n    builder.addCase(changeTaskList.fulfilled, (state, action) => {\n      const tasks: taskObject[] = action.payload.content;\n      state.tasks = tasks.filter(task => task.date === action.payload.date);\n    });\n    builder.addCase(deleteTask.fulfilled, (state, action) => {\n      console.log('call sucess')\n      const targetID: number = Number(action.payload);\n      state.tasks = state.tasks.filter(task => task.id !== targetID);\n    });\n    // エラー処理ブロック\n    builder.addCase(getTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getWeeklyTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getWeeklyTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMonthlyTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(getMonthlyTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(changeTaskList.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(changeTaskList.rejected, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(deleteTask.pending, () => {\n      // \bエラー画面表示\n    });\n    builder.addCase(deleteTask.rejected, () => {\n      // \bエラー画面表示\n    });\n  }\n});\n\nexport default taskSlice.reducer;\nexport const selectTask = (state: RootState) => state.task;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatch } from '../app/hooks';\nimport { langSet, webPath } from \"../config\";\n\n// Models\nimport { changeNavigation } from '../models';\n\n// UI\nimport { AppBar, Box, Toolbar, Typography, IconButton } from '@mui/material';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport type Props = {\n  isLogined: boolean;\n}\n\nconst Header: VFC<Props> = (Props) => {\n  const { isLogined } = Props;\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const toLogin = () => {\n    history.push(webPath + 'login');\n    dispatch(changeNavigation(3));\n  }\n  const toAccount = () => {\n    history.push(webPath + 'account');\n    dispatch(changeNavigation(3));\n  }\n  return (\n    <Box sx={{\n      flexGrow: 1,\n      position: \"fixed\",\n      width: \"100%\",\n      top: 0,\n      zIndex: 10,\n    }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"logo\">\n            <CleaningServicesIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {langSet.common.site}\n          </Typography>\n          {\n            isLogined ? <IconButton size=\"large\" color=\"inherit\" aria-label=\"login\" onClick={toAccount}>\n              <AccountCircleIcon />\n            </IconButton>\n              :\n              <IconButton size=\"large\" color=\"inherit\" aria-label=\"login\" onClick={toLogin}>\n                <LockOpenIcon /></IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\nexport default Header;","// Basic Library\nimport { VFC, useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport Cookies from 'js-cookie';\nimport { langSet, webPath } from \"../config\";\n\n// Models\nimport { changeNavigation, selectNavigation } from '../models';\n\n// UI\nimport { Box, BottomNavigation, BottomNavigationAction } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst Footer: VFC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const currentPage: number = useAppSelector(selectNavigation).currentPage;\n  const [index, setIndex] = useState(currentPage);\n  const path = [webPath, webPath + 'task', webPath + 'masters', webPath + 'account'];\n  const isLogined: boolean = Cookies.get('isLogined') === '1' ? true : false;\n  \n  useEffect(()=>{\n    setIndex(currentPage)\n  },[currentPage]);\n\n  const changePage = (targetPage: number) => {\n    if (isLogined) {\n      setIndex(targetPage);\n      dispatch(changeNavigation(targetPage));\n      history.push(path[targetPage]);\n    } else {\n      setIndex(3);\n      dispatch(changeNavigation(3));\n      history.push(webPath + 'login');\n    }\n  }\n\n  return (\n    <Box>\n      <BottomNavigation\n        sx={{\n          background: \"#efefef\",\n          position: \"fixed\",\n          width: \"100%\",\n          bottom: 0,\n          minHeight: 80,\n          zIndex: 10,\n        }}\n        showLabels\n        value={index}\n        onChange={(event, newIndex) => changePage(newIndex)}\n      >\n        <BottomNavigationAction label={langSet.common.menu.home} icon={<HomeIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.task} icon={<EditIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.master} icon={<CategoryIcon />} />\n        <BottomNavigationAction label={langSet.common.menu.account} icon={<PersonIcon />} />\n      </BottomNavigation>\n    </Box>\n  );\n}\n\nexport default Footer;","// Basic Library\nimport { VFC } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { langSet } from \"../config\";\n\nexport type Props = {\n  dad: number;\n  mom: number;\n}\n\n// レンダリング\nconst PieChart: VFC <Props> = (Props) => {\n  const { dad, mom } = Props;\n  const data = {\n    // x 軸のラベル\n\n    labels: [langSet.common.dad, langSet.common.mom],\n    datasets: [\n      {\n        label: langSet.common.chart.pie,\n        // データの値\n        data: [dad, mom],\n        // グラフの背景色\n        backgroundColor: [\n          'rgb(66, 165, 245, 0.6)',\n          'rgb(255, 112, 67, 0.6)',\n        ],\n        // グラフの枠線の色\n        borderColor: [\n          'rgb(66, 165, 245)',\n          'rgb(255, 112, 67)',\n        ],\n        // グラフの枠線の太さ\n        borderWidth: 1,\n      },\n    ],\n  };\n  return <Pie data={data} />;\n}\nexport default PieChart;","// Basic Library\nimport { VFC } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { subDays } from 'date-fns';\nimport format from \"date-fns/format\";\nimport { convertDate, langSet } from \"../config\";\n\nexport type Props = {\n  chartData: number[];\n}\n\nconst BarChart: VFC <Props> = (Props) => {\n  const { chartData } = Props;\n  const today = new Date();\n  let weekLabel: string[] = [];\n  [...Array(7)].map((_, i) => {\n    const prev: number = 7 - i;\n    const targetDate = format(convertDate(subDays(today, prev)).dateOrigin, 'eee');\n    weekLabel.push(String(targetDate));\n    }\n  )\n  const data = {\n    labels: weekLabel,\n    datasets: [\n      {\n        label: langSet.common.chart.bar,\n        data: chartData,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n          'rgba(255, 99, 132, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  \n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Bar data={data} />\n  )\n}\n\nexport default BarChart;","// Basic Library\nimport { VFC } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { subDays } from 'date-fns';\nimport format from \"date-fns/format\";\nimport { convertDate, langSet } from \"../config\";\n\nexport type Props = {\n  chartData: number[];\n}\n\nconst LineChart: VFC <Props> = (Props) => {\n  const { chartData } = Props;\n  const today = new Date();\n  let weekLabel: string[] = [];\n  [...Array(7)].map((_, i) => {\n    const prev: number = 7 - i;\n    const targetDate = format(convertDate(subDays(today, prev)).dateOrigin, 'eee');\n    weekLabel.push(String(targetDate));\n    }\n  )\n  const data = {\n    labels: weekLabel,\n    datasets: [\n      {\n        label: langSet.common.chart.line,\n        data: chartData,\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n  return (\n    <Line data={data} />\n  )\n}\n\nexport default LineChart;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { langSet, webPath } from \"../config\";\n\n// Models\nimport { masterObject } from \"../models/types\";\n\n// UI\nimport { Grid, ListItem, ListItemText, ListItemAvatar, Avatar, ListItemIcon, Divider, ListItemButton } from '@mui/material';\nimport LocalParkingIcon from '@mui/icons-material/LocalParking';\nimport BathtubIcon from '@mui/icons-material/Bathtub';\nimport EscalatorWarningIcon from '@mui/icons-material/EscalatorWarning';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport DryCleaningIcon from '@mui/icons-material/DryCleaning';\nimport OutdoorGrillIcon from '@mui/icons-material/OutdoorGrill';\nimport HotelIcon from '@mui/icons-material/Hotel';\nimport WashIcon from '@mui/icons-material/Wash';\nimport TaskIcon from '@mui/icons-material/Task';\nimport ChildCareIcon from '@mui/icons-material/ChildCare';\n\n\nexport type Props = {\n  master: masterObject;\n}\n\nconst iconList = [\n  {\n    name: 'cook',\n    display: langSet.common.category.cook,\n    icon: <OutdoorGrillIcon />\n  },\n  {\n    name: 'bath',\n    display: langSet.common.category.bath,\n    icon: <BathtubIcon />\n  },\n  {\n    name: 'delivery',\n    display: langSet.common.category.delivery,\n    icon: <EscalatorWarningIcon />\n  },\n  {\n    name: 'clean',\n    display: langSet.common.category.clean,\n    icon: <CleaningServicesIcon />\n  },\n  {\n    name: '‎laundry',\n    display: langSet.common.category.laundry,\n    icon: <DryCleaningIcon />\n  },\n  {\n    name: 'sleep',\n    display: langSet.common.category.sleep,\n    icon: <HotelIcon />\n  },\n  {\n    name: 'wash',\n    display: langSet.common.category.wash,\n    icon: <WashIcon />\n  },\n  {\n    name: 'child',\n    display: langSet.common.category.child,\n    icon: <ChildCareIcon />\n  },\n  {\n    name: 'others',\n    display: langSet.common.category.others,\n    icon: <TaskIcon />\n  }\n]\n\nconst MasterView: VFC<Props> = (Props) => {\n  const history = useHistory();\n  const { master } = Props;\n  const findIcon = (name: string) => {\n    const targetIcon = iconList.find(icon => icon.name === name);\n    const resultIcon = targetIcon ? targetIcon.icon : <TaskIcon />;\n    return resultIcon;\n  }\n  const findDisplayName = (name: string) => {\n    const targetDisplayName = iconList.find(icon => icon.name === name);\n    const resultDisplayName = targetDisplayName ? targetDisplayName.display : langSet.common.category.others;\n    return resultDisplayName;\n  }\n  const toMaster = () => {\n    history.push(`${webPath}master/${master.id}`);\n  }\n  return (\n    <>\n      <ListItem sx={{ pt: 2, pb: 2 }}>\n        <ListItemButton component=\"a\" onClick={toMaster}>\n          <Grid container spacing={2}>\n            <Grid item xs={2}>\n              <ListItemAvatar>\n                <Avatar>\n                  {findIcon(master.type)}\n                </Avatar>\n              </ListItemAvatar>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItemText primary={master.name} secondary={findDisplayName(master.type)} />\n            </Grid>\n            <Grid item xs={1}>\n              <ListItemIcon sx={{ pt: 2 }}>\n                <LocalParkingIcon />\n              </ListItemIcon>\n            </Grid>\n            <Grid item xs={3}>\n              <ListItemText primary={master.point} sx={{ pt: 2 }} />\n            </Grid>\n          </Grid>\n        </ListItemButton>\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </>\n  );\n}\n\nexport default MasterView;","// Basic Library\nimport { VFC, useState, useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { langSet } from \"../config\";\nimport { useAppDispatch } from '../app/hooks';\nimport { webPath } from '../config';\n\n// Models\nimport { editMaster, addMaster } from \"../models\";\nimport { masterObject, userStatus, newMasterAPI, targetMasterAPI } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { Box, TextField, InputLabel, MenuItem, FormControl, Slider, Select, SelectChangeEvent, Typography, Button } from '@mui/material';\n\nexport type Props = {\n  master: masterObject;\n}\n\nconst MasterEdit: VFC<Props> = (Props) => {\n  const history = useHistory();\n  const { master } = Props;\n  const [name, setName] = useState<string>(master.name);\n  const [type, setType] = useState<string>(master.type);\n  const [point, setPoint] = useState<number>(master.point);\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useContext(UserContext).user;\n  const userID = userStatus.userData? userStatus.userData.pk : 0;\n  const csrftoken: string = userStatus.token;\n\n  const handleTypeChange = (event: SelectChangeEvent) => {\n    setType(event.target.value as string);\n  };\n\n  const handlePointChange = (event: Event, newValue: number | number[]) => {\n    setPoint(newValue as number);\n  }\n\n  const saveMaster = () => {\n    const newMaster: newMasterAPI = {\n      content: {\n        user: userID,\n        type: type,\n        name: name,\n        point: point\n      },\n      token: csrftoken\n    }\n    if (master.id) {\n      const newValue: targetMasterAPI = {\n        content: {\n          id: master.id,\n          user: userID,\n          type: type,\n          name: name,\n          point: point\n        },\n        token: csrftoken\n      }\n      dispatch(editMaster(newValue));\n    } else {\n      dispatch(addMaster(newMaster));\n    }\n    history.push(webPath + 'masters');\n  }\n\n   return (\n    <>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <Typography component=\"h1\" variant=\"h5\">ID: {master.id}</Typography>\n      </Box>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField id=\"outlined-basic\" label={langSet.master.name} variant=\"outlined\" value={name} onChange={(event) => setName(event.target.value)} />\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">{langSet.master.type}</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={type}\n            label=\"Type\"\n            onChange={handleTypeChange}\n          >\n            {\n              Object.entries(langSet.common.category).map(([key, value]) => <MenuItem value={key} key={key}>{value}</MenuItem>)\n            }\n          </Select>\n        </FormControl>\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, pb: 2, maxWidth: '40ch' },\n      }}>\n        <Slider\n          value={point}\n          onChange={handlePointChange}\n          aria-label=\"Point\"\n          valueLabelDisplay=\"auto\"\n          step={5}\n          min={5}\n          max={50}\n        />\n        <Typography component=\"p\" variant=\"body2\">{langSet.master.point + ': ' + point}</Typography>\n      </Box>\n      <Box sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2, pt: 1, pb: 1, width: 120 }}\n          onClick={saveMaster}\n        >\n          {langSet.master.save}\n        </Button>\n      </Box>\n    </>\n  );\n}\n\nexport default MasterEdit;","// Basic Library\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { dateObject, convertDate, langSet } from \"../config\";\nimport Cookies from 'js-cookie';\n\n// Components\nimport { TaskEdit } from \"../components\";\n\n// Models\nimport { getTaskList, selectTask, changeTaskList, deleteTask } from \"../models\";\nimport { userStatus, taskList, taskObject, targetTaskAPI, taskListAPI } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { TextField, Container, Grid, List, Button, ListItem } from '@mui/material';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const TaskContext = createContext({} as {\n  task: taskObject;\n  setTask: any;\n})\n\nconst Task = () => {\n  const today: Date = new Date();\n  const [date, setDate] = useState<Date | null>(today);\n  const dispatch = useAppDispatch();\n  const dateObj: dateObject = convertDate(date);\n  const userStatus: userStatus = useContext(UserContext).user;\n  const currentUserID: number = userStatus.userData ? userStatus.userData.pk : 0;\n  const initTaskList: taskList = useAppSelector(selectTask);\n  const initTaskListData: taskObject[] = initTaskList.tasks;\n  const initIDArray: number[] = initTaskListData.map(task => task.id);\n  const [tasks, setTasks] = useState<taskObject[]>([]);\n  const csrftoken: string = userStatus.token;\n\n  const addNewTask = () => {\n    const idArray: number[] = tasks.map(task => task.id);\n    const currentID: number = tasks.length > 0 ? Math.max(...idArray) : 0;\n    const newID: number = currentID + 1;\n    const newTask: taskObject = {\n      id: newID,\n      user: currentUserID,\n      master: 0,\n      person: '',\n      date: dateObj.dateString,\n      update: true,\n    }\n    setTasks([...tasks, newTask]);\n  }\n\n  const removeTask = (targetID: number) => {\n    setTasks(tasks.filter(task => task.id !== targetID));\n  }\n\n  const setTask = (newTask: taskObject) => {\n    let tempTaskList = tasks.filter(task => task.id !== newTask.id);\n    console.log(tempTaskList);\n    tempTaskList.push(newTask);\n    tempTaskList.sort((a, b) => {\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1;\n      return 0;\n    });\n    setTasks(tempTaskList);\n  }\n\n  const saveTasks = () => {\n    const currentIDArray: number[] = tasks.map(task => task.id);\n    const newTasks: taskObject[] = tasks.filter(task => !initIDArray.includes(task.id));\n    const removedTasks: taskObject[] = initTaskListData.filter(task => !currentIDArray.includes(task.id));\n    const existTasks: taskObject[] = tasks.filter(task => initIDArray.includes(task.id));\n    const changedTasks: taskObject[] = existTasks.filter(task => task.update === true);\n    const changedTaskList: taskListAPI = {\n      editTaskList: changedTasks,\n      newTaskList: newTasks,\n      date: convertDate(date).dateString,\n      token: csrftoken\n    }\n    dispatch(changeTaskList(changedTaskList));\n    if (removedTasks.length > 0) {\n      removedTasks.forEach(target => {\n        const targetTask: targetTaskAPI = {\n          content: target,\n          date: convertDate(date).dateString,\n          token: csrftoken\n        }\n        dispatch(deleteTask(targetTask));\n      })\n    }\n    dispatch(getTaskList(dateObj.dateString));\n    setTasks(initTaskList.tasks);\n  }\n\n  useEffect(() => {\n    setTasks(initTaskList.tasks);\n  }, [initTaskList, dispatch]);\n\n  useEffect(() => {\n    setTasks([]);\n    dispatch(getTaskList(dateObj.dateString));\n  }, [date, dispatch]);\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ pt: 10, pb: 20 }}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          label={langSet.task.date}\n          value={date}\n          onChange={(newDate) => {\n            setDate(newDate);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <Grid container>\n        <Grid item xs={12}>\n          <List dense={false}>\n            {tasks !== [] ? tasks.map((taskItem, index) =>\n              <TaskContext.Provider key={index} value={{ task: taskItem, setTask: setTask }}>\n                <ListItem>\n                  <Grid container>\n                    <TaskEdit />\n                    <Grid item xs={1}>\n                      <DeleteIcon id={String(taskItem.id)} onClick={() => removeTask(taskItem.id)} sx={{ mt: 1 }} color=\"primary\" fontSize=\"large\" />\n                    </Grid>\n                  </Grid>\n                </ListItem>\n              </TaskContext.Provider>) : null\n            }\n          </List>\n        </Grid>\n      </Grid>\n      <Button variant=\"contained\" startIcon={<AddIcon />} sx={{ m: 1, p: 1, width: 120 }} onClick={addNewTask}>{langSet.task.add}</Button>\n      <Button variant=\"contained\" startIcon={<SaveIcon />} sx={{ m: 1, p: 1, width: 120 }} onClick={saveTasks}>{langSet.task.save}</Button>\n    </Container>\n  );\n}\n\nexport default Task;","// Basic Library\nimport { VFC, useEffect, useState, useContext } from \"react\";\nimport { useAppSelector } from '../app/hooks';\nimport { langSet } from \"../config\";\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { taskObject, masterObject } from \"../models/types\";\nimport { TaskContext } from \"../pages/Task\";\n\n// UI\nimport { InputLabel, MenuItem, FormControl, Select, SelectChangeEvent, Grid } from '@mui/material';\n\n\n\nconst TaskEdit: VFC = () => {\n  const { task, setTask } = useContext(TaskContext);\n  const masterList = useAppSelector(selectMaster);\n  const masters: masterObject[] = masterList.masters;\n  // const targetMasterByID = (targetID: number) => useAppSelector((state) => selectMasterByID(state, targetID));\n  // const targetMasterByName = (targetName: string) => useAppSelector((state) => selectMasterByName(state, targetName));\n  \n  const getMasterName = (targetID: number) => {\n    const targetMaster = masters.find(master => master.id === targetID);\n    const masterName: string = targetMaster ? targetMaster.name : '';\n    return masterName;\n  }\n  \n  const getMasterID = (targetName: string) => {\n    const targetMaster = masters.find(master => master.name === targetName);\n    const masterID: number = Number(targetMaster ? targetMaster.id : 0);\n    return masterID;\n  }\n\n  const [master, setMaster] = useState<string>(getMasterName(task.master));\n  const [person, setPerson] = useState<string>(task.person);\n\n  const handleMasterChange = (event: SelectChangeEvent) => {\n    const selectedMasterName: string = String(event.target.value);\n    setMaster(selectedMasterName);\n    const targetMasterID: number = getMasterID(selectedMasterName);\n    createNewTask(targetMasterID, task.person);\n  };\n\n  const handlePersonChange = (event: SelectChangeEvent) => {\n    const newPerson: string = String(event.target.value);\n    setPerson(newPerson);\n    createNewTask(task.master, newPerson);\n  };\n\n  const createNewTask = (master: number, person: string) => {\n    const newMaster: number = master ? master : task.master;\n    const newPerson: string = person ? person : task.person;\n    const newTask: taskObject = {\n      id: task.id,\n      update: true,\n      user: task.user,\n      master: newMaster,\n      person: newPerson,\n      date: task.date\n    }\n    setTask(newTask);\n  }\n\n  useEffect(()=>{\n    setPerson(task.person);\n    setMaster(getMasterName(task.master));\n  },[task])\n\n  return (\n    <>\n      <Grid item xs={7}>\n        <FormControl fullWidth>\n          <InputLabel id=\"master-select-label\">{langSet.task.master}</InputLabel>\n          <Select\n            labelId=\"master-select-label\"\n            value={master}\n            label=\"Master\"\n            onChange={handleMasterChange}\n            id={String(task.id)}\n          >\n            {masters !== [] ? masters.map((masterItem, index) =>\n              <MenuItem key={index} value={masterItem.name}>{masterItem.name}</MenuItem>\n            ) : <MenuItem value='No Available Master'>-</MenuItem>}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={4} sx={{ px: 1 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"person-select-label\">{langSet.task.person}</InputLabel>\n          <Select\n            labelId=\"person-select-label\"\n            value={person}\n            label=\"Person\"\n            onChange={handlePersonChange}\n            id={String(task.id)}\n          >\n            <MenuItem value=\"dad\">{langSet.common.dad}</MenuItem>\n            <MenuItem value=\"mom\">{langSet.common.mom}</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </>\n  );\n}\n\nexport default TaskEdit;","// Basic Library\nimport { VFC, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { subDays } from 'date-fns';\nimport { convertDate, langSet, imgPath } from \"../config\";\n\n// Components\nimport { PieChart, BarChart, LineChart } from '../components'\n\n// Models\nimport { selectTask, getWeeklyTaskList, getMonthlyTaskList, selectMaster } from \"../models\";\nimport { taskList, taskObject, masterList } from \"../models/types\";\n\n// UI\nimport { Grid, Typography, Container, Paper, Box } from '@mui/material';\nimport MaleIcon from '@mui/icons-material/Male';\nimport FemaleIcon from '@mui/icons-material/Female';\n\nconst Home: VFC = () => {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getWeeklyTaskList());\n    dispatch(getMonthlyTaskList());\n  }, []);\n  const masterList: masterList = useAppSelector(selectMaster);\n  const taskList: taskList = useAppSelector(selectTask);\n\n  const getPointByMasterID = (masterID: number) => {\n    const targetMaster = masterList.masters.find(master => master.id === masterID);\n    return targetMaster ? targetMaster.point : 0;\n  }\n\n  const sumPoints = (tasks: taskObject[]) => {\n    return tasks.reduce((sum, task) => sum + getPointByMasterID(task.master) ,0);\n  }\n\n  const PieData = () => {\n    const dad_week_points: number = sumPoints(taskList.dad.week);\n    const mom_week_points: number = sumPoints(taskList.mom.week);\n    const dad_month_points: number = sumPoints(taskList.dad.month);\n    const mom_month_points: number = sumPoints(taskList.mom.month);\n    const pieData = {\n      dad_week_points: dad_week_points,\n      mom_week_points: mom_week_points,\n      dad_month_points: dad_month_points,\n      mom_month_points: mom_month_points,\n    }\n    return pieData;\n  }\n\n  const sumDaily = (targetDate: string, tasks: taskObject[]) => {\n    const targetTaskList: taskObject[] = tasks.filter(task => task.date === targetDate);\n    const totalPoints: number = sumPoints(targetTaskList);\n    const totalTasks: number = targetTaskList.length;\n    const total = {\n      points: totalPoints,\n      tasks: totalTasks\n    }\n    return total;\n  }\n\n  const LineData = () => {\n    const today = new Date();\n    let dadPointList: number[] = [];\n    let momPointList: number[] = [];\n    let dadTaskList: number[] = [];\n    let momTaskList: number[] = [];\n    [...Array(7)].map((_, i) => {\n        const prev: number = 7 - i;\n        const targetDate = convertDate(subDays(today, prev)).dateString;\n        dadPointList.push(sumDaily(targetDate, taskList.dad.week).points);\n        momPointList.push(sumDaily(targetDate, taskList.mom.week).points);\n        dadTaskList.push(sumDaily(targetDate, taskList.dad.week).tasks);\n        momTaskList.push(sumDaily(targetDate, taskList.mom.week).tasks);\n      }\n    )\n    const lineData = {\n      dad_points: dadPointList,\n      mom_points: momPointList,\n      dad_tasks: dadTaskList,\n      mom_tasks: momTaskList,\n    }\n    return lineData;\n  }\n\n  const pieData = PieData();\n  const lineData = LineData();\n\n  return (\n    <>\n      <Box sx={{ pt:7 }}>\n      <img src={imgPath + 'mv.jpg'} alt=\"\" width=\"100%\" />\n      </Box>\n      <Container sx={{ pb: 16, pt: 4 }}>\n        <Typography variant=\"h4\" component=\"h2\" sx={{ paddingBlock: 4 }}>{langSet.home.title1}</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <Paper>\n              <Box sx={{ p: 4 }}>\n                <Typography variant=\"h6\" component=\"h3\" sx={{ pb: 2 }}>{langSet.home.sub1}</Typography>\n                <PieChart dad={pieData.dad_week_points} mom={pieData.mom_week_points} />\n              </Box>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <Paper>\n              <Box sx={{ p: 4 }}>\n                <Typography variant=\"h6\" component=\"h3\" sx={{ pb: 2 }}>{langSet.home.sub2}</Typography>\n                <PieChart dad={pieData.dad_month_points} mom={pieData.mom_month_points} />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n        <Typography variant=\"h4\" component=\"h2\" sx={{ pt: 8, pb: 4 }}>{langSet.home.title2}</Typography>\n        <Typography variant=\"h6\" component=\"h3\"><MaleIcon />{langSet.home.sub3}</Typography>\n        <Grid container spacing={2} sx={{mb:8}}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <BarChart chartData={lineData.dad_points} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <LineChart chartData={lineData.dad_tasks} />\n          </Grid>\n        </Grid>\n        <Typography variant=\"h6\" component=\"h3\"><FemaleIcon />{langSet.home.sub4}</Typography>\n        <Grid container spacing={2} sx={{mb:8}}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <BarChart chartData={lineData.mom_points} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <LineChart chartData={lineData.mom_tasks} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n}\nexport default Home;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { langSet, webPath } from \"../config\";\n\n// Models\nimport { selectUser, userLogout } from \"../models\";\nimport { userStatus } from \"../models/types\";\n\n// UI\nimport { Typography, Container, Button } from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst Acount: VFC = () => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useAppSelector(selectUser);\n  const userInfo = userStatus.userData;\n  const logout = () => {\n    dispatch(userLogout(userStatus));\n    history.push(webPath);\n  }\n\n  return (\n    <Container sx={{ pb: 20, pt: 10 }}>\n      {userInfo? \n        <>\n          <h1></h1>\n          <Typography variant=\"h4\" component=\"h1\" sx={{ flexGrow: 1 }}>\n            {langSet.account.welcome + userInfo.username} !\n          </Typography>\n          <Typography variant=\"h6\" component=\"p\" sx={{ flexGrow: 1, my: 4, px: 2 }}>\n            {langSet.account.email + ': ' + userInfo.email}\n          </Typography>\n          <Button variant=\"contained\" startIcon={<LogoutIcon />} sx={{ m:1, p: 1, width: 120 }} onClick={logout}>{langSet.account.logout}</Button>\n        </>\n      : null}\n    </Container>\n  )\n}\nexport default Acount;","// Basic Library\nimport { VFC, FormEvent, useContext, useState, useEffect } from \"react\";\nimport { useAppDispatch } from '../app/hooks';\nimport { useHistory } from \"react-router-dom\";\nimport { langSet, webPath, imgPath } from \"../config\";\n\n// Models\nimport { userLogin, changeNavigation } from \"../models\";\nimport { loginData, userStatus } from \"../models/types\";\nimport { UserContext } from '../App';\n\n// UI\nimport { createTheme, ThemeProvider, Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container, Snackbar, Alert } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst Login: VFC = () => {\n  const theme = createTheme();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useContext(UserContext).user;\n  const loginError: string = userStatus.error;\n  const [showError, setShowError] = useState<boolean>(false);\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginInfo: loginData = { username: String(data.get('user')), password: String(data.get('password')) };\n    dispatch(userLogin(loginInfo));\n  };\n\n  const toRegister = (event: any) => {\n    event.preventDefault();\n    history.push(webPath + 'register');\n  }\n\n  useEffect(() => {\n    if (userStatus.isLogined) {\n      history.push(webPath + 'account');\n      dispatch(changeNavigation(3));\n    }\n    if (userStatus.error === '') {\n      setShowError(false);\n    } else {\n      setShowError(true);\n    }\n  }, [dispatch, userStatus]);\n\n  return (\n    <Box sx={{\n      backgroundImage: `url('${imgPath}login.jpg')`,\n      backgroundPosition: 'bottom center',\n      minHeight: '100vh',\n      pt: 12\n    }}>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              padding: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              background: 'rgba(255, 255, 255, .8)',\n              borderRadius: '4px'\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {langSet.login.title}\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"user\"\n                label={langSet.login.user}\n                name=\"user\"\n                autoComplete=\"user\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label={langSet.login.password}\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label={langSet.login.remember}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {langSet.login.signin}\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    {langSet.login.forgot}\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\" onClick={toRegister}>\n                    {langSet.login.create}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n        <Snackbar open={showError} autoHideDuration={3000} onClose={() => setShowError(false)} sx={{ zIndex: 30, width: '90%' }}>\n          <Alert onClose={() => setShowError(false)} severity=\"error\" sx={{ width: '100%' }}>{langSet.common.error.login}</Alert>\n        </Snackbar>\n    </Box>\n  );\n}\n\nexport default Login;","// Basic Library\nimport { VFC, FormEvent, useContext, useState, useEffect } from \"react\";\nimport { useAppDispatch } from '../app/hooks';\nimport { useHistory } from \"react-router-dom\";\nimport { langSet, webPath, imgPath } from \"../config\";\n\n// Models\nimport { userRegister, changeNavigation } from \"../models\";\nimport { registerData, userStatus } from \"../models/types\";\nimport { UserContext } from '../App';\n\n// UI\nimport { createTheme, ThemeProvider, Avatar, Button, CssBaseline, TextField, Link, Grid, Box, Typography, Container, Snackbar, Alert } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst Register: VFC = () => {\n  const theme = createTheme();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useContext(UserContext).user;\n  const loginError: string = userStatus.error;\n  const [showError, setShowError] = useState<boolean>(false);\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const registerInfo:registerData = {username: String(data.get('user')), email: String(data.get('email')), password1: String(data.get('password')), password2: String(data.get('password_confirm'))};\n    dispatch(userRegister(registerInfo));\n  };\n\n  const toLogin = (event: any) => {\n    event.preventDefault();\n    history.push(webPath + 'login');\n  };\n\n  useEffect(() => {\n    if (userStatus.isLogined) {\n      history.push(webPath + 'account');\n      dispatch(changeNavigation(3));\n    }\n    if (userStatus.error === '') {\n      setShowError(false);\n    } else {\n      setShowError(true);\n    }\n  }, [dispatch, userStatus]);\n\n  return (\n    <Box sx={{ \n        backgroundImage: `url('${imgPath}login.jpg')`,\n        backgroundPosition: 'bottom center',\n        minHeight: '100vh',\n        pt: 12\n      }}>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              padding: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              background: 'rgba(255, 255, 255, .8)',\n              borderRadius: '4px'\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <AccountCircleIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {langSet.register.title}\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"user\"\n                label={langSet.register.user}\n                name=\"user\"\n                autoComplete=\"user\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label={langSet.register.email}\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label={langSet.register.password1}\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password_confirm\"\n                label={langSet.register.password2}\n                type=\"password\"\n                id=\"password_confirm\"\n                autoComplete=\"current-password\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {langSet.register.create}\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\" onClick={toLogin}>\n                  {langSet.register.already}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      <Snackbar open={showError} autoHideDuration={3000} onClose={() => setShowError(false)} sx={{ zIndex: 30, width: '90%' }}>\n        <Alert onClose={() => setShowError(false)} severity=\"error\" sx={{ width: '100%' }}>{langSet.common.error.register}</Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default Register;","// Basic Library\nimport { VFC } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppSelector } from '../app/hooks';\nimport { langSet, webPath } from \"../config\";\n\n// Components\nimport { MasterView } from \"../components\";\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { masterObject } from \"../models/types\";\n\n// UI\nimport { Container, Grid, List, Button } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Masters: VFC = () => {\n  const history = useHistory();\n  const masterList = useAppSelector(selectMaster);\n  const masters: masterObject[] = masterList.masters;\n  const addMaster = () => {\n    history.push(webPath + 'master/new');\n  }\n  return (\n  <Container maxWidth=\"sm\" sx={{ pt: 10, pb: 20 }}>\n    <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List dense>\n          {masters !== [] ? masters.map((masterItem, index) =>\n                <MasterView key={index} master={masterItem} />) : null\n          }\n          </List>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, pt: 1, pb: 1, width: 200 }}\n            onClick={addMaster}\n            startIcon={<AddIcon />}\n          >\n          {langSet.master.add}\n        </Button>\n        </Grid>\n      </Grid>\n  </Container>\n  )\n}\nexport default Masters;","// Basic Library\nimport { VFC, useContext } from \"react\";\nimport { useAppSelector } from '../app/hooks';\nimport { useRouteMatch } from \"react-router\";\n\n// Components\nimport { MasterEdit } from '../components';\n\n// Models\nimport { selectMaster } from \"../models\";\nimport { userStatus, masterObject } from \"../models/types\";\nimport { UserContext } from \"../App\";\n\n// UI\nimport { Container } from '@mui/material';\n\nconst Master: VFC = () => {\n  const match = useRouteMatch();\n  const masterList = useAppSelector(selectMaster);\n  const userStatus: userStatus = useContext(UserContext).user;\n  const currentUserID = userStatus.userData? userStatus.userData.pk : 0;\n  const masters: masterObject[] = masterList.masters;\n  const { masterID } = match.params as { masterID: string };\n  const targetMaster = masters.find(master => master.id === Number(masterID));\n  const newMaster: masterObject = {\n    id: null,\n    user: currentUserID,\n    type: '',\n    name: '',\n    point: 0\n  }\n  const masterData: masterObject = targetMaster? targetMaster : newMaster\n  return (\n    <Container maxWidth=\"sm\" sx={{mt: 10}}>\n      <MasterEdit master={masterData} />\n    </Container>\n  )\n}\nexport default Master;","// Basic Library\nimport { VFC, useEffect, createContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Switch, Route } from 'react-router';\nimport { useAppSelector, useAppDispatch } from './app/hooks';\nimport Cookies from 'js-cookie';\n\n// Pages & Components\nimport { Home, Login, Masters, Master, Task, Register, Account } from \"./pages\";\nimport { Header, Footer, ScrollToTop } from './components';\nimport { webPath } from './config';\n\n// Models\nimport { getUserData, selectUser, getMasterList, changeNavigation } from \"./models\";\nimport { userStatus } from './models/types';\n\n// UI\nimport './App.css';\n\nexport const UserContext = createContext({} as {\n  user: userStatus;\n})\n\nconst App: VFC = () => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const userStatus: userStatus = useAppSelector(selectUser);\n  const isLogined: boolean = Cookies.get('isLogined') === '1' ? true : false;\n\n  useEffect(() => {\n    if (isLogined) {\n      dispatch(getUserData());\n      dispatch(getMasterList());\n    } else {\n      history.push(webPath + 'login');\n      dispatch(changeNavigation(3));\n    }\n  }, [isLogined, dispatch]);\n\n  return (\n    <>\n      <UserContext.Provider value={{ user: userStatus }}>\n        <ScrollToTop />\n        <Header isLogined={isLogined} />\n        <Switch>\n          <Route exact path={webPath} component={Home} />\n          <Route path={webPath + 'login'}  component={Login} />\n          <Route path={webPath + 'register'} component={Register} />\n          <Route path={webPath + 'account'} component={Account} />\n          <Route path={webPath + 'masters'} component={Masters} />\n          <Route path={webPath + 'master/:masterID'} component={Master} />\n          <Route path={webPath + 'task'} component={Task} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport navigatorReducer from \"../models/Navigator\";\nimport userReducer from \"../models/User\";\nimport masterReducer from \"../models/Master\";\nimport taskReducer from \"../models/Task\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    master: masterReducer,\n    task: taskReducer,\n    navigator: navigatorReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}